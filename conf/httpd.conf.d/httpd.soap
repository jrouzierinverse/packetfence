#SOAP apache configuration file

<IfDefine debian>
  <IfModule !mod_perl.c>
    LoadModule perl_module /usr/lib/apache2/modules/mod_perl.so
  </IfModule>
  <IfModule !mod_log_config.c>
    LoadModule log_config_module /usr/lib/apache2/modules/mod_log_config.so
  </IfModule>
  <IfModule !mod_ssl.c>
    LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so
  </IfModule>
  <IfModule !mod_auth_basic.c>
    LoadModule auth_basic_module /usr/lib/apache2/modules/mod_auth_basic.so
  </IfModule>
  <IfModule !mod_authn_file.c>
    LoadModule authn_file_module /usr/lib/apache2/modules/mod_authn_file.so
  </IfModule>
  <IfModule !mod_authz_groupfile.c>
    Loadmodule authz_groupfile_module /usr/lib/apache2/modules/mod_authz_groupfile.so
  </IfModule>
  <IfModule !mod_authz_user.c>
    LoadModule authz_user_module /usr/lib/apache2/modules/mod_authz_user.so
  </IfModule>
  <IfModule !mod_authz_host.c>
    LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
  </IfModule>
</IfDefine>

#RHEL Specific
<IfDefine rhel>
  <IfModule !mod_perl.c>
    LoadModule perl_module modules/mod_perl.so
  </IfModule>
  <IfModule !mod_log_config.c>
    LoadModule log_config_module modules/mod_log_config.so
  </IfModule>
  <IfModule !mod_ssl.c>
    LoadModule ssl_module modules/mod_ssl.so
  </IfModule>
  <IfModule !mod_auth_basic.c>
    LoadModule auth_basic_module modules/mod_auth_basic.so
  </IfModule>
  <IfModule !mod_authn_file.c>
    LoadModule authn_file_module modules/mod_authn_file.so
  </IfModule>
  <IfModule !mod_authz_groupfile.c>
    Loadmodule authz_groupfile_module modules/mod_authz_groupfile.so
  </IfModule>
  <IfModule !mod_authz_user.c>
    LoadModule authz_user_module modules/mod_authz_user.so
  </IfModule>
  <IfModule !mod_authz_host.c>
    LoadModule authz_host_module modules/mod_authz_host.so
  </IfModule>
</IfDefine>


PerlSwitches -I/usr/local/pf/lib
PerlSwitches -I/usr/local/pf/html/pfappserver/lib

<Perl>
use pf::config qw();


my $PfConfig = \%pf::config::Config;
my $management_network = $pf::config::management_network;
my $install_dir = $pf::config::install_dir;
my $var_dir = $pf::config::var_dir;

$PidFile = $install_dir.'/var/run/httpd.soap.pid';

$Include = $install_dir.'/conf/httpd.conf.d/log.conf';

$User = "pf";
$Group = "pf";

#$PerlModule = "pf::web::dispatcher";
#$PerlOptions = "+GlobalRequest";

if (defined($PfConfig->{'alerting'}{'fromaddr'}) && $PfConfig->{'alerting'}{'fromaddr'} ne '') {
    $ServerAdmin = $PfConfig->{'alerting'}{'fromaddr'};
} else {
    $ServerAdmin = "root\@".$PfConfig->{'general'}{'hostname'}.$PfConfig->{'general'}{'domain'};
}

$ServerTokens = "Prod";
$ServerSignature = "Off";
$UseCanonicalName = "Off";
$Timeout = "50";
$KeepAliveTimeout = "10";

$MaxClients = "3";
$StartServers = "12";
$MinSpareServers = "6";
$HostnameLookups = "off";
$MaxRequestsPerChild = "1000";

$ErrorLog = $install_dir.'/logs/soap_error_log';

$NameVirtualHost => "*:$PfConfig->{'ports'}{'soap'}";

if (defined($management_network->{'Tip'}) && $management_network->{'Tip'} ne '') {
    @Listen =  ("127.0.0.1:".$PfConfig->{'ports'}{'soap'},$management_network->{'Tip'}.":".$PfConfig->{'ports'}{'soap'});


    #Generate Virtualhost for management interface (ssl enabled and auth enabled)
    push @{ $VirtualHost{$management_network->{'Tip'}.":".$PfConfig->{'ports'}{'soap'}} },
        {
             ServerName          => $PfConfig->{'general'}{'hostname'}.".".$PfConfig->{'general'}{'domain'}.":".$PfConfig->{'ports'}{'soap'},
             DocumentRoot        => $install_dir.'/html/pfappserver/lib',
             ErrorLog            => $install_dir.'/logs/soap_error_log',
             CustomLog           => $install_dir.'/logs/soap_access_log combined',
             SSLEngine           => 'on',
             Include             => $var_dir.'/conf/ssl-certificates.conf',
             Location     => {
                  "/" => {
                      SetHandler          => 'modperl',
                      PerlResponseHandler => 'pf::WebAPI',
                      AuthUserFile        => $install_dir.'/conf/admin.conf',
                      AuthGroupFile       => '/dev/null',
                      AuthName            => "PacketFence_Authentication",
                      AuthType            => 'Basic',
                      require             => 'valid-user',
                  },
             },
       };


} else {
    $Listen = "127.0.0.1:".$PfConfig->{'ports'}{'soap'};
}

#Generate the default soap listener on localhost

push @{ $VirtualHost{"127.0.0.1:$PfConfig->{'ports'}{'soap'}"} },
    {
         ServerName          => $PfConfig->{'general'}{'hostname'}.".".$PfConfig->{'general'}{'domain'}.":".$PfConfig->{'ports'}{'soap'},
         DocumentRoot        => $install_dir.'/html/pfappserver/lib',
         ErrorLog            => $install_dir.'/logs/soap_error_log',
         CustomLog           => $install_dir.'/logs/soap_access_log combined',
         SetHandler          => 'modperl',
         PerlResponseHandler => 'pf::WebAPI',
    };


</Perl>





