{
   "components" : {
      "parameters" : {
         "cursor" : {
            "description" : "The cursor pointer to fetch the data (value should be taken from previousCursor and nextCursor)",
            "in" : "query",
            "name" : "cursor",
            "required" : false,
            "schema" : {
               "type" : "string"
            }
         },
         "fields" : {
            "description" : "Comma delimited fields that should be added to the resource by performing joins. For example, in order to get the IP address of a node when calling the nodes endpoints, setting 'ip4log.ip' into this field will provide the latest IP address of the device in the 'ip4log.ip' field of every node that is returned.",
            "in" : "body",
            "name" : "fields",
            "required" : false,
            "schema" : {
               "example" : [
                  "mac",
                  "pid",
                  "ip4log.ip"
               ],
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "ipset_name" : {
            "description" : "The name of the ipset to manipulate",
            "in" : "path",
            "name" : "set_name",
            "required" : true,
            "schema" : {
               "type" : "string"
            }
         },
         "limit" : {
            "description" : "The maximum amount of entries to get.",
            "in" : "query|body",
            "name" : "limit",
            "required" : false,
            "schema" : {
               "type" : "int"
            }
         },
         "local" : {
            "description" : "The local is used to determine if the request should be forwarded to the rest of the cluster. A value of '0' forwards the request and either a missing or alternate value does not forward the request to the rest of the cluster.",
            "in" : "query",
            "name" : "local",
            "required" : false,
            "schema" : {
               "default" : 0,
               "type" : "integer"
            }
         },
         "search_params" : [
            {
               "$ref" : "#/components/parameters/cursor"
            },
            {
               "$ref" : "#/components/parameters/limit"
            },
            {
               "$ref" : "#/components/parameters/search_query"
            },
            {
               "$ref" : "#/components/parameters/fields"
            },
            {
               "$ref" : "#/components/parameters/sort"
            }
         ],
         "search_query" : {
            "description" : "The JSON encoded search query following the Search schema defined in this spec",
            "in" : "body",
            "name" : "query",
            "required" : true,
            "schema" : {
               "$ref" : "#/components/schemas/Search"
            }
         },
         "sort" : {
            "description" : "A list of fields to sort on along with the ordering way (ASC or DESC).",
            "in" : "body",
            "name" : "sort",
            "required" : false,
            "schema" : {
               "example" : [
                  "iplog.ip DESC",
                  "node.detectdate ASC"
               ],
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "user_id" : {
            "description" : "The user ID",
            "in" : "path",
            "name" : "user_id",
            "required" : true,
            "schema" : {
               "type" : "string"
            }
         }
      },
      "responses" : {
         "BadRequest" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "Bad Request. One of the submitted parameters has an invalid format"
         },
         "Created" : {
            "description" : "A response that contains the location of a created resource",
            "headers" : {
               "Location" : {
                  "description" : "The location of the created resource",
                  "schema" : {
                     "type" : "string"
                  }
               }
            }
         },
         "DhcpInterfaceInit" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpInterfaceStats"
                  }
               }
            },
            "description" : "A response that contains interface statistics after initialization"
         },
         "DhcpInterfaceStats" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpInterfaceStats"
                  }
               }
            },
            "description" : "A response that contains interface statistics"
         },
         "DhcpMacIp" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpMacIp"
                  }
               }
            },
            "description" : "A response that contains the relational MAC address and IPv4 address"
         },
         "DhcpMacResponse" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpMacResponse"
                  }
               }
            },
            "description" : "A response that contains a status on success or failure with the MAC address"
         },
         "DhcpNetworkResponse" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpNetworkResponse"
                  }
               }
            },
            "description" : "A response that contains a status on success or failure with the Network IPv4 address"
         },
         "Duplicate" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "An attempt to add a duplicate entry was stopped. Entry already exists and should be modified instead of created."
         },
         "ErrorsWithMessage" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ErrorsWithMessage"
                  }
               }
            },
            "description" : "A response that contains a message along with explanatory error messages tied to fields"
         },
         "Forbidden" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "Forbidden access to the resource because of insufficient access rights"
         },
         "IpsetIp" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/IpsetIp"
                  }
               }
            },
            "description" : "A response that contains a status along with the IPv4 address"
         },
         "IpsetMac" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/IpsetMac"
                  }
               }
            },
            "description" : "A response that contains a status along with the MAC address"
         },
         "Message" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "NotFound" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ErrorsWithMessage"
                  }
               }
            },
            "description" : "Request cannot be processed because the resource could not be found."
         },
         "Unauthorized" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "Unauthorized access because of invalid credentials"
         },
         "UnprocessableEntity" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ErrorsWithMessage"
                  }
               }
            },
            "description" : "Request cannot be processed because the resource has failed validation after the modification."
         }
      },
      "schemas" : {
         "ApiUser" : {
            "properties" : {
               "access_level" : {
                  "type" : "string"
               },
               "expiration" : {
                  "type" : "string"
               },
               "password" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "username" : {
                  "type" : "string"
               },
               "valid_from" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "ApiUsersList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ApiUser"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "DhcpInterfaceStats" : {
            "description" : "The schema used for a collection of interface initialization and statistics",
            "items" : {
               "description" : "Statistics of the DHCP scope",
               "properties" : {
                  "category" : {
                     "description" : "Associated role of the DHCP scope",
                     "type" : "string"
                  },
                  "free" : {
                     "description" : "Available number of IPv4 addresses in the DHCP scope",
                     "type" : "integer"
                  },
                  "interface" : {
                     "description" : "Network interface name where the DHCP scope is provided",
                     "type" : "string"
                  },
                  "members" : {
                     "description" : "A collection of MAC address and IPv4 address pairs",
                     "items" : {
                        "description" : "A MAC address and IPv4 address pair",
                        "properties" : {
                           "ip" : {
                              "description" : "The MAC address of the DHCP member",
                              "type" : "string"
                           },
                           "mac" : {
                              "description" : "The IPv4 address of the DHCP member",
                              "type" : "string"
                           }
                        },
                        "type" : "object"
                     },
                     "type" : "array"
                  },
                  "network" : {
                     "description" : "Network address",
                     "type" : "string"
                  },
                  "options" : {
                     "description" : "Dhcp options of the DHCP scope",
                     "properties" : {
                        "optionDomainName" : {
                           "description" : "Domain name",
                           "type" : "string"
                        },
                        "optionDomainNameServer" : {
                           "description" : "DNS IPv4 addresses",
                           "type" : "string"
                        },
                        "optionIPAddressLeaseTime" : {
                           "description" : "Lease time",
                           "type" : "string"
                        },
                        "optionRouter" : {
                           "description" : "Gateway IPv4 addresses",
                           "type" : "string"
                        },
                        "optionSubnetMask" : {
                           "description" : "Netmask",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "status" : {
                     "description" : "Status of the DHCP scope",
                     "enum" : [
                        "Normal",
                        "Calculated available IP X is different than what we have available in the pool Y",
                        "Init Lease success"
                     ],
                     "type" : "string"
                  }
               },
               "type" : "object"
            },
            "type" : "array"
         },
         "DhcpMacIp" : {
            "description" : "The schema used when returning a DHCP MAC address and IPv4 address pair",
            "properties" : {
               "description" : "A MAC address and IPv4 address pair",
               "ip" : {
                  "description" : "The IPv4 address",
                  "type" : "string"
               },
               "mac" : {
                  "description" : "The MAC address",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DhcpMacResponse" : {
            "description" : "The schema used when options are added or deleted from a MAC address",
            "properties" : {
               "mac" : {
                  "description" : "The MAC address",
                  "type" : "string"
               },
               "status" : {
                  "description" : "Whether the request succeeded \"ACK\", or failed \"NAK\"",
                  "enum" : [
                     "ACK",
                     "NAK"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DhcpNetworkResponse" : {
            "description" : "The schema used when options are added or deleted from a Network",
            "properties" : {
               "network" : {
                  "description" : "The networks IPv4 address",
                  "type" : "string"
               },
               "status" : {
                  "description" : "Whether the request succeeded \"ACK\", or failed \"NAK\"",
                  "enum" : [
                     "ACK",
                     "NAK"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DhcpOption82" : {
            "properties" : {
               "circuit_id_string" : {
                  "type" : "string"
               },
               "created_at" : {
                  "type" : "string"
               },
               "host" : {
                  "type" : "string"
               },
               "mac" : {
                  "type" : "string"
               },
               "module" : {
                  "type" : "string"
               },
               "option82_switch" : {
                  "type" : "string"
               },
               "port" : {
                  "type" : "string"
               },
               "switch_id" : {
                  "type" : "string"
               },
               "vlan" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "DhcpOption82sList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/DhcpOption82"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ErrorsWithMessage" : {
            "properties" : {
               "errors" : {
                  "items" : {
                     "type" : "object"
                  },
                  "type" : "array"
               },
               "message" : {
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Ip4log" : {
            "properties" : {
               "end_time" : {
                  "type" : "string"
               },
               "ip" : {
                  "type" : "string"
               },
               "mac" : {
                  "type" : "string"
               },
               "start_time" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "Ip4logsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/Ip4log"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "IpsetIp" : {
            "properties" : {
               "ip" : {
                  "description" : "The IPv4 address of the client",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetMac" : {
            "properties" : {
               "mac" : {
                  "description" : "The clients MAC address. example: 01:23:45:67:89:AB",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetNetwork" : {
            "properties" : {
               "network" : {
                  "description" : "The IPv4 network identifier",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetPort" : {
            "properties" : {
               "port" : {
                  "description" : "The port to allow through. Can be prefixed with a protocol `tcp:` or `udp:`. When the protocol is omited, then the port will be opened for both protocols. example: tcp:65535",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetRoleId" : {
            "properties" : {
               "role_id" : {
                  "description" : "The client's node",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "IpsetStatus" : {
            "properties" : {
               "type" : {
                  "description" : "The response status.",
                  "enum" : [
                     "ACK",
                     "NAK"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetType" : {
            "properties" : {
               "type" : {
                  "description" : "The Ipset type.",
                  "enum" : [
                     "Reg",
                     "Unreg"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Iterable" : {
            "properties" : {
               "nextCursor" : {
                  "description" : "The cursor to access the data after the one returned in the response",
                  "type" : "string"
               },
               "previousCursor" : {
                  "description" : "The cursor to access the data before the one returned in the response",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Locationlog" : {
            "properties" : {
               "connection_sub_type" : {
                  "type" : "string"
               },
               "connection_type" : {
                  "type" : "string"
               },
               "dot1x_username" : {
                  "type" : "string"
               },
               "end_time" : {
                  "type" : "string"
               },
               "id" : {
                  "type" : "integer"
               },
               "ifDesc" : {
                  "type" : "string"
               },
               "mac" : {
                  "type" : "string"
               },
               "port" : {
                  "type" : "string"
               },
               "realm" : {
                  "type" : "string"
               },
               "role" : {
                  "type" : "string"
               },
               "session_id" : {
                  "type" : "string"
               },
               "ssid" : {
                  "type" : "string"
               },
               "start_time" : {
                  "type" : "string"
               },
               "stripped_user_name" : {
                  "type" : "string"
               },
               "switch" : {
                  "type" : "string"
               },
               "switch_ip" : {
                  "type" : "string"
               },
               "switch_mac" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "vlan" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "LocationlogsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/Locationlog"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Message" : {
            "properties" : {
               "message" : {
                  "description" : "A meaninful user readable message about what happened",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Node" : {
            "properties" : {
               "autoreg" : {
                  "type" : "string"
               },
               "bandwidth_balance" : {
                  "type" : "integer"
               },
               "bypass_role_id" : {
                  "type" : "integer"
               },
               "bypass_vlan" : {
                  "type" : "string"
               },
               "category_id" : {
                  "type" : "integer"
               },
               "computername" : {
                  "type" : "string"
               },
               "detect_date" : {
                  "type" : "string"
               },
               "device_class" : {
                  "type" : "string"
               },
               "device_score" : {
                  "type" : "string"
               },
               "device_type" : {
                  "type" : "string"
               },
               "device_version" : {
                  "type" : "string"
               },
               "dhcp6_enterprise" : {
                  "type" : "string"
               },
               "dhcp6_fingerprint" : {
                  "type" : "string"
               },
               "dhcp_fingerprint" : {
                  "type" : "string"
               },
               "dhcp_vendor" : {
                  "type" : "string"
               },
               "last_arp" : {
                  "type" : "string"
               },
               "last_dhcp" : {
                  "type" : "string"
               },
               "last_seen" : {
                  "type" : "string"
               },
               "lastskip" : {
                  "type" : "string"
               },
               "mac" : {
                  "type" : "string"
               },
               "machine_account" : {
                  "type" : "string"
               },
               "notes" : {
                  "type" : "string"
               },
               "pid" : {
                  "type" : "string"
               },
               "regdate" : {
                  "type" : "string"
               },
               "sessionid" : {
                  "type" : "string"
               },
               "status" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "time_balance" : {
                  "type" : "integer"
               },
               "unregdate" : {
                  "type" : "string"
               },
               "user_agent" : {
                  "type" : "string"
               },
               "voip" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "NodesList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/Node"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "RadiusAuditLog" : {
            "properties" : {
               "auth_status" : {
                  "type" : "string"
               },
               "auth_type" : {
                  "type" : "string"
               },
               "auto_reg" : {
                  "type" : "string"
               },
               "called_station_id" : {
                  "type" : "string"
               },
               "calling_station_id" : {
                  "type" : "string"
               },
               "computer_name" : {
                  "type" : "string"
               },
               "connection_type" : {
                  "type" : "string"
               },
               "created_at" : {
                  "type" : "string"
               },
               "eap_type" : {
                  "type" : "string"
               },
               "event_type" : {
                  "type" : "string"
               },
               "id" : {
                  "type" : "integer"
               },
               "ifindex" : {
                  "type" : "string"
               },
               "ip" : {
                  "type" : "string"
               },
               "is_phone" : {
                  "type" : "string"
               },
               "mac" : {
                  "type" : "string"
               },
               "nas_identifier" : {
                  "type" : "string"
               },
               "nas_ip_address" : {
                  "type" : "string"
               },
               "nas_port" : {
                  "type" : "string"
               },
               "nas_port_id" : {
                  "type" : "string"
               },
               "nas_port_type" : {
                  "type" : "string"
               },
               "node_status" : {
                  "type" : "string"
               },
               "pf_domain" : {
                  "type" : "string"
               },
               "profile" : {
                  "type" : "string"
               },
               "radius_reply" : {
                  "type" : "string"
               },
               "radius_request" : {
                  "type" : "string"
               },
               "radius_source_ip_address" : {
                  "type" : "string"
               },
               "realm" : {
                  "type" : "string"
               },
               "reason" : {
                  "type" : "string"
               },
               "request_time" : {
                  "type" : "integer"
               },
               "role" : {
                  "type" : "string"
               },
               "source" : {
                  "type" : "string"
               },
               "ssid" : {
                  "type" : "string"
               },
               "stripped_user_name" : {
                  "type" : "string"
               },
               "switch_id" : {
                  "type" : "string"
               },
               "switch_ip_address" : {
                  "type" : "string"
               },
               "switch_mac" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "user_name" : {
                  "type" : "string"
               },
               "uuid" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "RadiusAuditLogsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/RadiusAuditLog"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Search" : {
            "example" : {
               "op" : "and",
               "values" : [
                  {
                     "field" : "detect_date",
                     "op" : "between",
                     "values" : [
                        "2017-01-01 ",
                        "2017-01-02 "
                     ]
                  },
                  {
                     "op" : "or",
                     "values" : [
                        {
                           "field" : "mac",
                           "op" : "ends_with",
                           "value" : "ab:cd"
                        },
                        {
                           "field" : "pid",
                           "op" : "equals",
                           "value" : "lzammit"
                        }
                     ]
                  }
               ]
            },
            "properties" : {
               "field" : {
                  "description" : "The field to perform the search on. It is possible to specify fields from other API endpoints (ex: ip4log.ip)",
                  "type" : "string"
               },
               "op" : {
                  "description" : "The operator to use against the value of the field. Can be `and`, `or`, `is`, `is_not`, `match`, `not_match`, `contains`, `not_contains`, `between` and `not_between`",
                  "type" : "string"
               },
               "value" : {
                  "description" : "The search term to use when performing the search using on the specified field. This field must be used when the operator performs the condition against a single string value.",
                  "type" : "string"
               },
               "values" : {
                  "description" : "An array of simple/complex searches to use with the provided operator. To be used when the operator expects complex values as arguments. Refer to the examples for how to use this efficiently. This field must follow the same structure as this schema.",
                  "items" : {
                     "type" : "object"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "Service" : {
            "properties" : {
               "alive" : {
                  "description" : "Whether the service is alive or not.",
                  "type" : "integer"
               },
               "enabled" : {
                  "description" : "Whether the service is enabled or not.",
                  "type" : "integer"
               },
               "managed" : {
                  "description" : "Whether the service is managed or not.",
                  "type" : "integer"
               },
               "pid" : {
                  "description" : "The service PID.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceDisable" : {
            "properties" : {
               "start" : {
                  "description" : "Whether the service was disabled or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceEnable" : {
            "properties" : {
               "start" : {
                  "description" : "Whether the service was enabled or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceName" : {
            "type" : "string"
         },
         "ServiceRestart" : {
            "properties" : {
               "pid" : {
                  "description" : "The service PID.",
                  "type" : "integer"
               },
               "restart" : {
                  "description" : "Whether the service was restarted or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceStart" : {
            "properties" : {
               "pid" : {
                  "description" : "The service PID.",
                  "type" : "integer"
               },
               "start" : {
                  "description" : "Whether the service was started or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceStop" : {
            "properties" : {
               "stop" : {
                  "description" : "Whether the service was stopped or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServicesList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ServiceName"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Tenant" : {
            "properties" : {
               "domain_name" : {
                  "type" : "string"
               },
               "id" : {
                  "type" : "integer"
               },
               "name" : {
                  "type" : "string"
               },
               "portal_domain_name" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "TenantsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/Tenant"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "User" : {
            "properties" : {
               "address" : {
                  "type" : "string"
               },
               "anniversary" : {
                  "type" : "string"
               },
               "apartment_number" : {
                  "type" : "string"
               },
               "birthday" : {
                  "type" : "string"
               },
               "building_number" : {
                  "type" : "string"
               },
               "cell_phone" : {
                  "type" : "string"
               },
               "company" : {
                  "type" : "string"
               },
               "custom_field_1" : {
                  "type" : "string"
               },
               "custom_field_2" : {
                  "type" : "string"
               },
               "custom_field_3" : {
                  "type" : "string"
               },
               "custom_field_4" : {
                  "type" : "string"
               },
               "custom_field_5" : {
                  "type" : "string"
               },
               "custom_field_6" : {
                  "type" : "string"
               },
               "custom_field_7" : {
                  "type" : "string"
               },
               "custom_field_8" : {
                  "type" : "string"
               },
               "custom_field_9" : {
                  "type" : "string"
               },
               "email" : {
                  "type" : "string"
               },
               "firstname" : {
                  "type" : "string"
               },
               "gender" : {
                  "type" : "string"
               },
               "lang" : {
                  "type" : "string"
               },
               "lastname" : {
                  "type" : "string"
               },
               "nickname" : {
                  "type" : "string"
               },
               "notes" : {
                  "type" : "string"
               },
               "pid" : {
                  "type" : "string"
               },
               "portal" : {
                  "type" : "string"
               },
               "room_number" : {
                  "type" : "string"
               },
               "source" : {
                  "type" : "string"
               },
               "sponsor" : {
                  "type" : "string"
               },
               "telephone" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "title" : {
                  "type" : "string"
               },
               "work_phone" : {
                  "type" : "string"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "UsersList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/User"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Violation" : {
            "properties" : {
               "id" : {
                  "type" : "integer"
               },
               "mac" : {
                  "type" : "string"
               },
               "notes" : {
                  "type" : "string"
               },
               "release_date" : {
                  "type" : "string"
               },
               "start_date" : {
                  "type" : "string"
               },
               "status" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "ticket_ref" : {
                  "type" : "string"
               },
               "vid" : {
                  "type" : "integer"
               }
            },
            "required" : [],
            "type" : "object"
         },
         "ViolationsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/Violation"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "config" : {
            "AdminRole" : {
               "properties" : {
                  "actions" : {
                     "description" : "Actions",
                     "items" : {
                        "description" : "Action",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "allowed_access_durations" : {
                     "description" : "A comma seperated list of access durations available to the admin user. If none are provided then the default access durations are used",
                     "type" : "string"
                  },
                  "allowed_access_levels" : {
                     "description" : "List of access levels available to the admin user. If none are provided then all access levels are available",
                     "items" : {
                        "description" : "List of access levels available to the admin user. If none are provided then all access levels are available",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "allowed_actions" : {
                     "description" : "List of actions available to the admin user. If none are provided then all actions are available",
                     "items" : {
                        "description" : "List of actions available to the admin user. If none are provided then all actions are available",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "allowed_node_roles" : {
                     "description" : "List of roles available to the admin user to assign to a node. If none are provided then all roles are available",
                     "items" : {
                        "description" : "List of roles available to the admin user to assign to a node. If none are provided then all roles are available",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "allowed_roles" : {
                     "description" : "List of roles available to the admin user to assign to a user. If none are provided then all roles are available",
                     "items" : {
                        "description" : "List of roles available to the admin user to assign to a user. If none are provided then all roles are available",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "allowed_unreg_date" : {
                     "description" : "The maximal unregistration date that can be set.",
                     "type" : "string"
                  },
                  "description" : {
                     "description" : "Description",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Role Name",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id",
                  "description"
               ],
               "type" : "object"
            },
            "AdminRolesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/AdminRole"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Base" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : []
            },
            "BasesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Base"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "BillingTier" : {
               "properties" : {
                  "access_duration" : {
                     "description" : "The access duration of the devices that use this tier.",
                     "properties" : {
                        "interval" : {
                           "description" : "Interval",
                           "type" : "integer"
                        },
                        "unit" : {
                           "description" : "Unit",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "description" : {
                     "description" : "A description of the billing tier",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Billing Tier",
                     "type" : "string"
                  },
                  "name" : {
                     "description" : "The short name of the billing tier",
                     "type" : "string"
                  },
                  "price" : {
                     "description" : "The price that will be charged to the customer",
                     "type" : "string"
                  },
                  "role" : {
                     "description" : "The target role of the devices that use this tier.",
                     "type" : "string"
                  },
                  "use_time_balance" : {
                     "description" : "Check this box to have the access duration be a real time usage.<br/>This requires a working accounting configuration.",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id",
                  "name",
                  "description",
                  "price",
                  "role",
                  "access_duration"
               ],
               "type" : "object"
            },
            "BillingTiersList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/BillingTier"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "ConnectionProfile" : {
               "properties" : {
                  "access_registration_when_registered" : {
                     "description" : "This allows already registered users to be able to re-register their device by first accessing the status page and then accessing the portal. This is useful to allow users to extend their access even though they are already registered.",
                     "type" : "string"
                  },
                  "advanced_filter" : {
                     "description" : "Advanced filter",
                     "type" : "string"
                  },
                  "always_use_redirecturl" : {
                     "description" : "Under most circumstances we can redirect the user to the URL he originally intended to visit. However, you may prefer to force the captive portal to redirect the user to the redirection URL.",
                     "type" : "string"
                  },
                  "autoregister" : {
                     "description" : "This activates automatic registation of devices for the profile. Devices will not be shown a captive portal and RADIUS authentication credentials will be used to register the device. This option only makes sense in the context of an 802.1x authentication.",
                     "type" : "string"
                  },
                  "billing_tiers" : {
                     "description" : "Billing tiers",
                     "items" : {
                        "description" : "Billing tier",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "block_interval" : {
                     "description" : "The amount of time a user is blocked after reaching the defined limit for login, sms request and sms pin retry.",
                     "properties" : {
                        "interval" : {
                           "description" : "Interval",
                           "type" : "integer"
                        },
                        "unit" : {
                           "description" : "Unit",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "description" : {
                     "description" : "Profile Description",
                     "type" : "string"
                  },
                  "device_registration" : {
                     "description" : "Device registration",
                     "type" : "string"
                  },
                  "dot1x_recompute_role_from_portal" : {
                     "description" : "When enabled, PacketFence will not use the role initialy computed on the portal but will use the dot1x username to recompute the role.",
                     "type" : "string"
                  },
                  "filter" : {
                     "description" : "Filters",
                     "items" : {
                        "description" : "Filter",
                        "properties" : {
                           "match" : {
                              "description" : "Match",
                              "type" : "string"
                           },
                           "type" : {
                              "description" : "Type",
                              "type" : "string"
                           }
                        },
                        "type" : "object"
                     },
                     "type" : "array"
                  },
                  "filter_match_style" : {
                     "description" : "Filter match style",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "A profile id can only contain alphanumeric characters, dashes, period and or underscores.",
                     "type" : "string"
                  },
                  "locale" : {
                     "description" : "Locales",
                     "items" : {
                        "description" : "Locale",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "login_attempt_limit" : {
                     "description" : "Limit the number of login attempts. A value of 0 disables the limit.",
                     "type" : "integer"
                  },
                  "logo" : {
                     "description" : "Logo",
                     "type" : "string"
                  },
                  "preregistration" : {
                     "description" : "This activates preregistration on the connection profile. Meaning, instead of applying the access to the currently connected device, it displays a local account that is created while registering. Note that activating this disables the on-site registration on this connection profile. Also, make sure the sources on the connection profile have \"Create local account\" enabled.",
                     "type" : "string"
                  },
                  "provisioners" : {
                     "description" : "Provisioners",
                     "items" : {
                        "description" : "Provisioner",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "redirecturl" : {
                     "description" : "Default URL to redirect to on registration/mitigation release. This is only used if a per-violation redirect URL is not defined.",
                     "type" : "string"
                  },
                  "reuse_dot1x_credentials" : {
                     "description" : "This option emulates SSO when someone needs to face the captive portal after a successful 802.1x connection. 802.1x credentials are reused on the portal to match an authentication and get the appropriate actions. As a security precaution, this option will only reuse 802.1x credentials if there is an authentication source matching the provided realm. This means, if users use 802.1x credentials with a domain part (username@domain, domain\\username), the domain part needs to be configured as a realm under the RADIUS section and an authentication source needs to be configured for that realm. If users do not use 802.1x credentials with a domain part, only the NULL realm will be match IF an authentication source is configured for it.",
                     "type" : "string"
                  },
                  "root_module" : {
                     "description" : "The Root Portal Module to use",
                     "type" : "string"
                  },
                  "scans" : {
                     "description" : "Scans",
                     "items" : {
                        "description" : "Scan",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "sms_pin_retry_limit" : {
                     "description" : "Maximum number of times a user can retry a SMS PIN before having to request another PIN. A value of 0 disables the limit.",
                     "type" : "integer"
                  },
                  "sms_request_limit" : {
                     "description" : "Maximum number of times a user can request a SMS PIN. A value of 0 disables the limit.",
                     "type" : "integer"
                  },
                  "sources" : {
                     "description" : "Sources",
                     "items" : {
                        "description" : "Source",
                        "type" : "string"
                     },
                     "type" : "array"
                  }
               },
               "required" : [
                  "id",
                  "root_module"
               ],
               "type" : "object"
            },
            "ConnectionProfilesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/ConnectionProfile"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "DeviceRegistration" : {
               "properties" : {
                  "allowed_devices" : {
                     "description" : "List of OS which will be allowed to be register via the self service portal.",
                     "items" : {
                        "description" : "List of OS which will be allowed to be register via the self service portal.",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "category" : {
                     "description" : "The role to assign to devices registered from the specific portal. If none is specified, the role of the registrant is used.",
                     "type" : "string"
                  },
                  "description" : {
                     "description" : "Description",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Profile Name",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id"
               ],
               "type" : "object"
            },
            "DeviceRegistrationsList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/DeviceRegistration"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Domain" : {
               "properties" : {
                  "ad_server" : {
                     "description" : "The IP address or DNS name of your Active Directory server",
                     "type" : "string"
                  },
                  "bind_dn" : {
                     "description" : "The username of a Domain Admin to use to join the server to the domain",
                     "type" : "string"
                  },
                  "bind_pass" : {
                     "description" : "The password of a Domain Admin to use to join the server to the domain. Will not be stored permanently and is only used while joining the domain.",
                     "type" : "string"
                  },
                  "dns_name" : {
                     "description" : "The DNS name (FQDN) of the domain.",
                     "type" : "string"
                  },
                  "dns_servers" : {
                     "description" : "The IP address(es) of the DNS server(s) for this domain. Comma delimited if multiple.",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Specify a unique identifier for your configuration.<br/>This doesn't have to be related to your domain",
                     "type" : "string"
                  },
                  "ntlm_cache" : {
                     "description" : "Should the NTLM cache be enabled for this domain?",
                     "type" : "string"
                  },
                  "ntlm_cache_batch" : {
                     "description" : "When this is enabled, all users matching the LDAP filter will be inserted in the cache via a background job (maintenance.populate_ntlm_redis_cache_interval controls the interval).",
                     "type" : "string"
                  },
                  "ntlm_cache_batch_one_at_a_time" : {
                     "description" : "Whether or not to fetch users on your AD one by one instead of doing a single batch fetch. This is useful when your AD is loaded or experiencing issues during the sync. Note that this makes the batch job much longer and is about 4 times slower when enabled.",
                     "type" : "string"
                  },
                  "ntlm_cache_expiry" : {
                     "description" : "The amount of seconds an entry should be cached. This should be adjusted to twice the value of maintenance.populate_ntlm_redis_cache_interval if using the batch mode.",
                     "type" : "integer"
                  },
                  "ntlm_cache_filter" : {
                     "description" : "An LDAP query to filter out the users that should be cached.",
                     "type" : "string"
                  },
                  "ntlm_cache_on_connection" : {
                     "description" : "When this is enabled, an async job will cache the NTLM credentials of the user every time he connects.",
                     "type" : "string"
                  },
                  "ntlm_cache_source" : {
                     "description" : "The source to use to connect to your Active Directory server for NTLM caching.",
                     "type" : "string"
                  },
                  "ou" : {
                     "description" : "Precreate the computer account in a specific OU. The OU string read from top to bottom without RDNs and delimited by a '/'. E.g. \"Computers/Servers/Unix\"",
                     "type" : "string"
                  },
                  "registration" : {
                     "description" : "If this option is enabled, the device will be able to reach the Active Directory from the registration VLAN.",
                     "type" : "string"
                  },
                  "server_name" : {
                     "description" : "This server's name (account name) in your Active Directory. Use '%h' to automatically use this server hostname",
                     "type" : "string"
                  },
                  "sticky_dc" : {
                     "description" : "This is used to specify a sticky domain controller to connect to. If not specified, default '*' will be used to connect to any available domain controller",
                     "type" : "string"
                  },
                  "workgroup" : {
                     "description" : "Workgroup",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id",
                  "workgroup",
                  "ad_server",
                  "dns_servers",
                  "server_name",
                  "sticky_dc",
                  "dns_name",
                  "ou"
               ],
               "type" : "object"
            },
            "DomainsList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Domain"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Firewall" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "password",
                        "username"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "If using the HTTP transport, specify the password for the Palo Alto API",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify. This parameter is ignored when the Syslog transport is selected.",
                           "type" : "integer"
                        },
                        "transport" : {
                           "description" : "Transport",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        },
                        "vsys" : {
                           "description" : "Please define the Virtual System number. This only has an effect when used with the HTTP transport.",
                           "type" : "integer"
                        }
                     },
                     "required" : [
                        "id"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Secret",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "password"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Secret or Key",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "password"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Secret or Key",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "password"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "nac_name" : {
                           "description" : "Should match the NAC name from the Iboss configuration",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Change the default key if necessary",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "password"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "cache_timeout" : {
                           "description" : "Adjust the \"Cache timeout\" to half the expiration delay in your firewall.<br/>Your DHCP renewal interval should match this value.",
                           "type" : "integer"
                        },
                        "cache_updates" : {
                           "description" : "Enable this to debounce updates to the Firewall.<br/>By default, PacketFence will send a SSO on every DHCP request for every device. Enabling this enables \"sleep\" periods during which the update is not sent if the informations stay the same.",
                           "type" : "string"
                        },
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "default_realm" : {
                           "description" : "The default realm to be used while formatting the username when no realm can be extracted from the username.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "networks" : {
                           "description" : "Comma delimited list of networks on which the SSO applies.<br/>Format : 192.168.0.0/24",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Secret or Key",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "uid" : {
                           "description" : "UID type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username",
                           "type" : "string"
                        },
                        "username_format" : {
                           "description" : "Defines how to format the username that is sent to your firewall. $username represents the username and $realm represents the realm of your user if applicable. $pf_username represents the unstripped username as it is stored in the PacketFence database. If left empty, it will use the username as stored in PacketFence (value of $pf_username).",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "password",
                        "username"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "FirewallsList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Firewall"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "FloatingDevice" : {
               "properties" : {
                  "id" : {
                     "description" : "MAC Address",
                     "type" : "string"
                  },
                  "ip" : {
                     "description" : "IP Address",
                     "type" : "string"
                  },
                  "pvid" : {
                     "description" : "VLAN in which PacketFence should put the port",
                     "type" : "integer"
                  },
                  "taggedVlan" : {
                     "description" : "Comma separated list of VLANs. If the port is a multi-vlan, these are the VLANs that have to be tagged on the port.",
                     "type" : "string"
                  },
                  "trunkPort" : {
                     "description" : "The port must be configured as a muti-vlan port",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id",
                  "pvid"
               ],
               "type" : "object"
            },
            "FloatingDevicesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/FloatingDevice"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "MaintenanceTask" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "delete_window" : {
                           "description" : "How long can an unregistered node be inactive on the network before being deleted.<br>This shouldn't be used if you are using port-security",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "unreg_window" : {
                           "description" : "How long can a registered node be inactive on the network before it becomes unregistered",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "certificates" : {
                           "description" : "SSL certificate(s) to monitor. Comma-delimited list",
                           "type" : "string"
                        },
                        "delay" : {
                           "description" : "Minimum gap before certificate expiration date (will the certificate expires in ...)",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "window" : {
                           "description" : "Window to apply the job to. In the case of a deletion, setting this to 7 days would delete affected data older than 7 days.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "window" : {
                           "description" : "Window to apply the job to. In the case of a deletion, setting this to 7 days would delete affected data older than 7 days.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "process_switchranges" : {
                           "description" : "Whether or not a switch range should be expanded to process each of its IPs",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "rotate" : {
                           "description" : "Enable or disable ip6log rotation (moving ip6log_history records to ip6log_archive)<br>If disabled, this task will delete from the ip6log_history table rather than the ip6log_archive.",
                           "type" : "string"
                        },
                        "rotate_batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "rotate_timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "rotate_window" : {
                           "description" : "How long to keep ip6log history entry before rotating it to ip6log archive.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "window" : {
                           "description" : "How long to keep a ip6log archive entry before deleting it (or ip6log history if rotation is disabled)",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "window" : {
                           "description" : "Window",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "id" : {
                           "description" : "Pfmon Name",
                           "type" : "string"
                        },
                        "interval" : {
                           "description" : "Interval (frequency) at which the task is executed.<br>Requires a restart of pfmon to be fully effective. Otherwise, it will be taken in consideration next time the tasks runs.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "rotate" : {
                           "description" : "Enable or disable ip4log rotation (moving ip4log_history records to ip4log_archive)<br>If disabled, this task will delete from the ip4log_history table rather than the ip4log_archive.",
                           "type" : "string"
                        },
                        "rotate_batch" : {
                           "description" : "Amount of items that will be processed in each batch of this task. Batches are executed until there is no more items to process or until the timeout is reached.",
                           "type" : "integer"
                        },
                        "rotate_timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "rotate_window" : {
                           "description" : "How long to keep ip4log history entry before rotating it to ip4log archive.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "status" : {
                           "description" : "Whether or not this task is enabled.<br>Requires a restart of pfmon to be effective.",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Maximum amount of time this task can run.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "window" : {
                           "description" : "How long to keep a ip4log archive entry before deleting it (or ip4log history if rotation is disabled)",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     },
                     "required" : [
                        "id",
                        "type"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "MaintenanceTasksList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/MaintenanceTask"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "PkiProvider" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "ca_cert_path" : {
                           "description" : "Path of the CA certificate that will generate your certificates",
                           "type" : "string"
                        },
                        "cn_attribute" : {
                           "description" : "Defines what attribute of the node to use as the common name during the certificate generation",
                           "type" : "string"
                        },
                        "cn_format" : {
                           "description" : "Defines how the common name will be formated. %s will expand to the defined Common Name Attribute value",
                           "type" : "string"
                        },
                        "country" : {
                           "description" : "Country for the certificate",
                           "type" : "string"
                        },
                        "host" : {
                           "description" : "Host which hosts the PacketFence PKI",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "The unique ID of the PKI provider",
                           "type" : "string"
                        },
                        "organization" : {
                           "description" : "Organization for the certificate",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Password for the username filled in above",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "Port on which to contact the PacketFence PKI API",
                           "type" : "string"
                        },
                        "profile" : {
                           "description" : "Profile used for the generation of certificate",
                           "type" : "string"
                        },
                        "proto" : {
                           "description" : "Protocol to use to contact the PacketFence PKI API",
                           "type" : "string"
                        },
                        "revoke_on_unregistration" : {
                           "description" : "Check this box to have the certificate revoke when the node using it is unregistered.<br/>Do not use if multiple devices share the same certificate",
                           "type" : "string"
                        },
                        "server_cert_path" : {
                           "description" : "Path of the RADIUS server authentication certificate",
                           "type" : "string"
                        },
                        "state" : {
                           "description" : "State for the certificate",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "PKI Provider type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username to connect to the PKI",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type",
                        "ca_cert_path",
                        "server_cert_path"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "ca_cert_path" : {
                           "description" : "Path of the CA certificate used to generate client certificate/key combination",
                           "type" : "string"
                        },
                        "client_cert_path" : {
                           "description" : "Path of the client cert that will be used to generate the p12",
                           "type" : "string"
                        },
                        "client_key_path" : {
                           "description" : "Path of the client key that will be used to generate the p12",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "The unique ID of the PKI provider",
                           "type" : "string"
                        },
                        "server_cert_path" : {
                           "description" : "Path of the RADIUS server authentication certificate",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "PKI Provider type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type",
                        "client_cert_path",
                        "client_key_path",
                        "ca_cert_path",
                        "server_cert_path"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "ca_cert_path" : {
                           "description" : "Path of the CA that will generate your certificates",
                           "type" : "string"
                        },
                        "cn_attribute" : {
                           "description" : "Defines what attribute of the node to use as the common name during the certificate generation.",
                           "type" : "string"
                        },
                        "cn_format" : {
                           "description" : "Defines how the common name will be formated. %s will expand to the defined Common Name Attribute value",
                           "type" : "string"
                        },
                        "country" : {
                           "description" : "Country for the certificate",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "The unique id of the PKI provider",
                           "type" : "string"
                        },
                        "locality" : {
                           "description" : "Locality for the certificate",
                           "type" : "string"
                        },
                        "organization" : {
                           "description" : "Organization for the certificate",
                           "type" : "string"
                        },
                        "organizational_unit" : {
                           "description" : "Organizational unit for the certificate",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Password for the username filled in above",
                           "type" : "string"
                        },
                        "server_cert_path" : {
                           "description" : "Path of the RADIUS server authentication certificate",
                           "type" : "string"
                        },
                        "state" : {
                           "description" : "State for the certificate",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "url" : {
                           "description" : "The url used to connect to the SCEP PKI service",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username to connect to the SCEP PKI Service",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "type",
                        "ca_cert_path",
                        "server_cert_path"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "PkiProvidersList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/PkiProvider"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "PortalModule" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "multi_source_ids" : {
                           "description" : "Multi source ids",
                           "items" : {
                              "description" : "Multi source id",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Defines the username used for all authentications",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template",
                        "username"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "message" : {
                           "description" : "The message that will be displayed to the user. Use with caution as the HTML contained in this field will NOT be escaped.",
                           "type" : "string"
                        },
                        "skipable" : {
                           "description" : "Whether or not, this message can be skipped",
                           "type" : "string"
                        },
                        "template" : {
                           "description" : "The template to use to display the message",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "message"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "modules" : {
                           "description" : "Modules",
                           "items" : {
                              "description" : "Module",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "multi_source_auth_classes" : {
                           "description" : "The sources of these authentication classes and part of the connection profile will be added to the available sources",
                           "type" : "string"
                        },
                        "multi_source_ids" : {
                           "description" : "Multi source ids",
                           "items" : {
                              "description" : "Multi source id",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "multi_source_object_classes" : {
                           "description" : "The sources inheriting from these classes and part of the connection profile will be added to the available sources",
                           "type" : "string"
                        },
                        "multi_source_types" : {
                           "description" : "The sources of these types and part of the connection profile will be added to the available sources",
                           "type" : "string"
                        },
                        "show_first_module_on_default" : {
                           "description" : "Show first module when none is selected",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "template" : {
                           "description" : "The template to use to display the choices",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "forced_sponsor" : {
                           "description" : "Defines the sponsor email used. Leave empty so that the user has to specify a sponsor.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "skipable" : {
                           "description" : "Whether or not, the provisioning can be skipped",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "stone_roles" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "skipable" : {
                           "description" : "Whether or not, this redirection can be skipped.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "url" : {
                           "description" : "The URL on which the user should be redirected.",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "url"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "modules" : {
                           "description" : "Modules",
                           "items" : {
                              "description" : "Module",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "multi_source_ids" : {
                           "description" : "Multi source ids",
                           "items" : {
                              "description" : "Multi source id",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "admin_role" : {
                           "description" : "Which roles should have access to this module to select the role",
                           "items" : {
                              "description" : "Which roles should have access to this module to select the role",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "list_role" : {
                           "description" : "Which roles can be select",
                           "items" : {
                              "description" : "Which roles can be select",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "template" : {
                           "description" : "The template to use",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "survey_id" : {
                           "description" : "The survey to use in this portal module. Surveys are defined in survey.conf",
                           "type" : "string"
                        },
                        "template" : {
                           "description" : "The template to use to display the message",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "modules" : {
                           "description" : "Modules",
                           "items" : {
                              "description" : "Module",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "show_first_module_on_default" : {
                           "description" : "Show first module when none is selected",
                           "type" : "string"
                        },
                        "template" : {
                           "description" : "The template to use to display the choices",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "landing_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "landing_template"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "modules" : {
                           "description" : "Modules",
                           "items" : {
                              "description" : "Module",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "actions" : {
                           "description" : "Actions",
                           "items" : {
                              "description" : "Action",
                              "properties" : {
                                 "arguments" : {
                                    "description" : "Arguments",
                                    "type" : "string"
                                 },
                                 "type" : {
                                    "description" : "Type",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "aup_template" : {
                           "description" : "The template to use for the AUP",
                           "type" : "string"
                        },
                        "custom_fields" : {
                           "description" : "The additionnal fields that should be required for registration",
                           "items" : {
                              "description" : "The additionnal fields that should be required for registration",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "The description that will be displayed to users",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Identifier",
                           "type" : "string"
                        },
                        "multi_source_ids" : {
                           "description" : "Multi source ids",
                           "items" : {
                              "description" : "Multi source id",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "pid_field" : {
                           "description" : "Which field should be used as the PID.",
                           "type" : "string"
                        },
                        "signup_template" : {
                           "description" : "The template to use for the signup",
                           "type" : "string"
                        },
                        "source_id" : {
                           "description" : "The sources to use in the module. If no sources are specified, all the sources on the Connection Profile will be used",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "with_aup" : {
                           "description" : "Require the user to accept the AUP",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "aup_template",
                        "signup_template"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "PortalModulesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/PortalModule"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Realm" : {
               "properties" : {
                  "admin_strip_username" : {
                     "description" : "Should the usernames matching this realm be stripped when used on the administration interface",
                     "type" : "string"
                  },
                  "domain" : {
                     "description" : "The domain to use for the authentication in that realm",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Realm",
                     "type" : "string"
                  },
                  "options" : {
                     "description" : "You can add FreeRADIUS options in the realm definition",
                     "type" : "string"
                  },
                  "portal_strip_username" : {
                     "description" : "Should the usernames matching this realm be stripped when used on the captive portal",
                     "type" : "string"
                  },
                  "radius_strip_username" : {
                     "description" : "Should the usernames matching this realm be stripped when used in the authorization phase of 802.1x. Note that this doesn't control the stripping in FreeRADIUS, use the options above for that.",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id"
               ],
               "type" : "object"
            },
            "RealmsList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Realm"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Role" : {
               "properties" : {
                  "id" : {
                     "description" : "Name",
                     "type" : "string"
                  },
                  "max_nodes_per_pid" : {
                     "description" : "The maximum number of nodes a user having this role can register.",
                     "type" : "integer"
                  },
                  "notes" : {
                     "description" : "Description",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id",
                  "max_nodes_per_pid"
               ],
               "type" : "object"
            },
            "RolesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Role"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Scan" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "domain" : {
                           "description" : "Domain",
                           "type" : "string"
                        },
                        "duration" : {
                           "description" : "Approximate duration of a scan. User being scanned on registration are presented a progress bar for this duration, afterwards the browser refreshes until scan is complete.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "oses" : {
                           "description" : "Nodes with the selected OS will be affected",
                           "items" : {
                              "description" : "Nodes with the selected OS will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "post_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host after on the production vlan.",
                           "type" : "string"
                        },
                        "pre_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host before the registration.",
                           "type" : "string"
                        },
                        "registration" : {
                           "description" : "If this option is enabled, the PF system will scan each host after registration is complete.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username",
                           "type" : "string"
                        },
                        "wmi_policy" : {
                           "description" : "Name of the policy to use",
                           "type" : "string"
                        },
                        "wmi_rules" : {
                           "description" : "Wmi rules",
                           "items" : {
                              "description" : "Wmi rule",
                              "type" : "string"
                           },
                           "type" : "array"
                        }
                     },
                     "required" : [
                        "id",
                        "username",
                        "password",
                        "domain"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "duration" : {
                           "description" : "Approximate duration of a scan. User being scanned on registration are presented a progress bar for this duration, afterwards the browser refreshes until scan is complete.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "ip" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "openvas_configid" : {
                           "description" : "ID of the scanning configuration on the OpenVAS server",
                           "type" : "string"
                        },
                        "openvas_reportformatid" : {
                           "description" : "ID of the .NBE report format on the OpenVAS server",
                           "type" : "string"
                        },
                        "oses" : {
                           "description" : "Nodes with the selected OS will be affected",
                           "items" : {
                              "description" : "Nodes with the selected OS will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "post_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host after on the production vlan.",
                           "type" : "string"
                        },
                        "pre_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host before the registration.",
                           "type" : "string"
                        },
                        "registration" : {
                           "description" : "If this option is enabled, the PF system will scan each host after registration is complete.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "username",
                        "password",
                        "ip"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "duration" : {
                           "description" : "Approximate duration of a scan. User being scanned on registration are presented a progress bar for this duration, afterwards the browser refreshes until scan is complete.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "ip" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "nessus_clientpolicy" : {
                           "description" : "Name of the policy to use on the nessus server",
                           "type" : "string"
                        },
                        "oses" : {
                           "description" : "Nodes with the selected OS will be affected",
                           "items" : {
                              "description" : "Nodes with the selected OS will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "post_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host after on the production vlan.",
                           "type" : "string"
                        },
                        "pre_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host before the registration.",
                           "type" : "string"
                        },
                        "registration" : {
                           "description" : "If this option is enabled, the PF system will scan each host after registration is complete.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "username",
                        "password",
                        "ip"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "categories" : {
                           "description" : "Nodes with the selected roles will be affected",
                           "items" : {
                              "description" : "Nodes with the selected roles will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "duration" : {
                           "description" : "Approximate duration of a scan. User being scanned on registration are presented a progress bar for this duration, afterwards the browser refreshes until scan is complete.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "ip" : {
                           "description" : "Hostname or IP Address",
                           "type" : "string"
                        },
                        "nessus_clientpolicy" : {
                           "description" : "Name of the policy to use on the nessus server",
                           "type" : "string"
                        },
                        "oses" : {
                           "description" : "Nodes with the selected OS will be affected",
                           "items" : {
                              "description" : "Nodes with the selected OS will be affected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "If you use an alternative port, please specify",
                           "type" : "integer"
                        },
                        "post_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host after on the production vlan.",
                           "type" : "string"
                        },
                        "pre_registration" : {
                           "description" : "If this option is enabled, the PF system will scan host before the registration.",
                           "type" : "string"
                        },
                        "registration" : {
                           "description" : "If this option is enabled, the PF system will scan each host after registration is complete.",
                           "type" : "string"
                        },
                        "scannername" : {
                           "description" : "Name of the scanner to use on the nessus server",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "Username",
                           "type" : "string"
                        },
                        "verify_hostname" : {
                           "description" : "Verify hostname of server",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "username",
                        "password",
                        "ip"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "ScansList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Scan"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Source" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "sms_carriers" : {
                           "description" : "List of phone carriers available to the user",
                           "items" : {
                              "description" : "List of phone carriers available to the user",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "API ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "API Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "authorize_path",
                        "access_token_path",
                        "access_token_param",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorization_source_id" : {
                           "description" : "The source to use for authorization (rule matching)",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "idp_ca_cert_path" : {
                           "description" : "If your Identity Provider uses a self-signed certificate, put the path to its certificate here instead.",
                           "type" : "string"
                        },
                        "idp_cert_path" : {
                           "description" : "Path to Identity Provider cert (x509)",
                           "type" : "string"
                        },
                        "idp_entity_id" : {
                           "description" : "Identity Provider entity ID",
                           "type" : "string"
                        },
                        "idp_metadata_path" : {
                           "description" : "Path to Identity Provider metadata",
                           "type" : "string"
                        },
                        "sp_cert_path" : {
                           "description" : "Path to Service Provider cert (x509)",
                           "type" : "string"
                        },
                        "sp_entity_id" : {
                           "description" : "Service Provider entity ID",
                           "type" : "string"
                        },
                        "sp_key_path" : {
                           "description" : "Path to Service Provider key (x509)",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username_attribute" : {
                           "description" : "Attribute of the username in the SAML response",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "sp_entity_id",
                        "sp_key_path",
                        "sp_cert_path",
                        "idp_entity_id",
                        "idp_metadata_path",
                        "idp_cert_path",
                        "idp_ca_cert_path",
                        "authorization_source_id"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "cert_file" : {
                           "description" : "The path to the certificate you submitted to Paypal.",
                           "type" : "string"
                        },
                        "cert_id" : {
                           "description" : "Cert id",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "currency" : {
                           "description" : "Currency",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "email_address" : {
                           "description" : "The email address associated to your paypal account.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "identity_token" : {
                           "description" : "Identity token",
                           "type" : "string"
                        },
                        "key_file" : {
                           "description" : "The path to the associated key of the certificate you submitted to Paypal.",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "payment_type" : {
                           "description" : "The type of transactions this source will do (donations or sales).",
                           "type" : "string"
                        },
                        "paypal_cert_file" : {
                           "description" : "The path to the Paypal certificate you downloaded.",
                           "type" : "string"
                        },
                        "send_email_confirmation" : {
                           "description" : "Send billing confirmation",
                           "type" : "string"
                        },
                        "test_mode" : {
                           "description" : "Test mode",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "identity_token",
                        "cert_id",
                        "cert_file",
                        "key_file",
                        "paypal_cert_file",
                        "email_address",
                        "payment_type",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "Graph API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "App ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "App Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "Graph API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "Graph API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "authorize_path",
                        "access_token_path",
                        "access_token_param",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_path" : {
                           "description" : "API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "API ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "API Secret",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "protected_resource_url" : {
                           "description" : "API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "authorize_path",
                        "access_token_path",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authenticate_realm" : {
                           "description" : "Realm to use to authenticate",
                           "type" : "string"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "host" : {
                           "description" : "Host",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "host",
                        "authenticate_realm"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "File Path",
                           "type" : "string"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "path"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "Graph API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "client_id" : {
                           "description" : "App ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "App Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "Graph API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "Graph API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "access_token_path",
                        "access_token_param",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "Graph API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "client_id" : {
                           "description" : "App ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "App Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "Graph API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "Graph API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "access_token_path",
                        "access_token_param",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "API ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "API Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "authorize_path",
                        "access_token_path",
                        "access_token_param",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "activation_domain" : {
                           "description" : "Set this value if you want to change the hostname in the validation link. Changing this requires to restart haproxy to be fully effective.",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "allow_localdomain" : {
                           "description" : "Accept self-registration with email address from the local domain",
                           "type" : "string"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "email_activation_timeout" : {
                           "description" : "This is the delay given to a guest who registered by email confirmation to log into his email and click the activation link.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "email_activation_timeout"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_path" : {
                           "description" : "API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "App ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "App Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma-separated list of domains that will be resolved with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must match your hostname and domain parameters set in System Configuration > Main Configuration > General Configuration.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "access_token_path",
                        "authorize_path",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "basedn" : {
                           "description" : "Base DN",
                           "type" : "string"
                        },
                        "binddn" : {
                           "description" : "Leave this field empty if you want to perform an anonymous bind.",
                           "type" : "string"
                        },
                        "cache_match" : {
                           "description" : "Will cache results of matching a rule",
                           "type" : "string"
                        },
                        "connection_timeout" : {
                           "description" : "LDAP connection Timeout",
                           "type" : "integer"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "email_attribute" : {
                           "description" : "LDAP attribute name that stores the email address against which the filter will match.",
                           "type" : "string"
                        },
                        "encryption" : {
                           "description" : "Encryption",
                           "type" : "string"
                        },
                        "host" : {
                           "description" : "Host",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "monitor" : {
                           "description" : "Do you want to monitor this source?",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "Port",
                           "type" : "integer"
                        },
                        "read_timeout" : {
                           "description" : "LDAP response timeout",
                           "type" : "integer"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "scope" : {
                           "description" : "Scope",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "usernameattribute" : {
                           "description" : "Username Attribute",
                           "type" : "string"
                        },
                        "write_timeout" : {
                           "description" : "LDAP request timeout",
                           "type" : "integer"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "encryption",
                        "basedn",
                        "scope",
                        "usernameattribute"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_url" : {
                           "description" : "Note : The URL is always prefixed by a slash (/)",
                           "type" : "string"
                        },
                        "authorization_url" : {
                           "description" : "Note : The URL is always prefixed by a slash (/)",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "host" : {
                           "description" : "Host",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "API password (basic auth)",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "Port",
                           "type" : "integer"
                        },
                        "protocol" : {
                           "description" : "Encryption",
                           "type" : "string"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "username" : {
                           "description" : "API username (basic auth)",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "protocol",
                        "authentication_url",
                        "authorization_url"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "base_url" : {
                           "description" : "Iframe Base url",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "currency" : {
                           "description" : "Currency",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "direct_base_url" : {
                           "description" : "Direct Base url",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "merchant_id" : {
                           "description" : "Merchant ID",
                           "type" : "string"
                        },
                        "send_email_confirmation" : {
                           "description" : "Send billing confirmation",
                           "type" : "string"
                        },
                        "service_fqdn" : {
                           "description" : "Service FQDN",
                           "type" : "string"
                        },
                        "shared_secret" : {
                           "description" : "MKEY for the iframe",
                           "type" : "string"
                        },
                        "shared_secret_direct" : {
                           "description" : "MKEY for Mirapay Direct",
                           "type" : "string"
                        },
                        "terminal_group_id" : {
                           "description" : "Terminal Group ID for Mirapay Direct",
                           "type" : "string"
                        },
                        "terminal_id" : {
                           "description" : "Terminal ID for Mirapay Direct",
                           "type" : "string"
                        },
                        "test_mode" : {
                           "description" : "Test mode",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "base_url",
                        "direct_base_url",
                        "terminal_id",
                        "shared_secret_direct",
                        "shared_secret",
                        "merchant_id"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "App ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "App Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "App URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "authorize_path",
                        "access_token_path",
                        "access_token_param",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "group_header" : {
                           "description" : "Group header",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "proxy_addresses" : {
                           "description" : "A comma seperated list of IP Address",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "user_header" : {
                           "description" : "User header",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "proxy_addresses",
                        "user_header",
                        "group_header"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "api_login_id" : {
                           "description" : "Api login id",
                           "type" : "string"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "currency" : {
                           "description" : "Currency",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "md5_hash" : {
                           "description" : "MD5 hash",
                           "type" : "string"
                        },
                        "send_email_confirmation" : {
                           "description" : "Send billing confirmation",
                           "type" : "string"
                        },
                        "test_mode" : {
                           "description" : "Test mode",
                           "type" : "string"
                        },
                        "transaction_key" : {
                           "description" : "Transaction key",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "api_login_id",
                        "transaction_key",
                        "md5_hash",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "api_key" : {
                           "description" : "Kickbox.io API key.",
                           "type" : "string"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "email_required" : {
                           "description" : "Email required",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "api_key"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "account_sid" : {
                           "description" : "Twilio Account SID",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "auth_token" : {
                           "description" : "Twilio Auth Token",
                           "type" : "string"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "pin_code_length" : {
                           "description" : "The length of the PIN code to be sent over sms",
                           "type" : "integer"
                        },
                        "twilio_phone_number" : {
                           "description" : "Twilio provided phone number which will show as the sender",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "account_sid",
                        "auth_token",
                        "twilio_phone_number"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "auth_listening_port" : {
                           "description" : "PacketFence Eduroam RADIUS virtual server authentication listening port",
                           "type" : "integer"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_realm" : {
                           "description" : "Realms that will be authenticate locally",
                           "items" : {
                              "description" : "Realms that will be authenticate locally",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "monitor" : {
                           "description" : "Do you want to monitor this source?",
                           "type" : "string"
                        },
                        "radius_secret" : {
                           "description" : "Eduroam RADIUS secret",
                           "type" : "string"
                        },
                        "reject_realm" : {
                           "description" : "Realms that will be rejected",
                           "items" : {
                              "description" : "Realms that will be rejected",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "server1_address" : {
                           "description" : "Eduroam server 1 address",
                           "type" : "string"
                        },
                        "server2_address" : {
                           "description" : "Eduroam server 2 address",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "server1_address",
                        "server2_address",
                        "radius_secret"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "currency" : {
                           "description" : "Currency",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "publishable_key" : {
                           "description" : "Publishable key",
                           "type" : "string"
                        },
                        "secret_key" : {
                           "description" : "Secret key",
                           "type" : "string"
                        },
                        "send_email_confirmation" : {
                           "description" : "Send billing confirmation",
                           "type" : "string"
                        },
                        "style" : {
                           "description" : "The type of payment the user will make. Charge is a one time fee, subscription will be a recurring fee.",
                           "type" : "string"
                        },
                        "test_mode" : {
                           "description" : "Test mode",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "domains"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "email_required" : {
                           "description" : "Email required",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "host" : {
                           "description" : "Host",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "monitor" : {
                           "description" : "Do you want to monitor this source?",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "Port",
                           "type" : "integer"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "secret" : {
                           "description" : "Secret",
                           "type" : "string"
                        },
                        "timeout" : {
                           "description" : "Timeout",
                           "type" : "integer"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "host",
                        "port",
                        "secret",
                        "timeout"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "activation_domain" : {
                           "description" : "Set this value if you want to change the hostname in the validation link. Changing this requires to restart haproxy to be fully effective.",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "allow_localdomain" : {
                           "description" : "Accept self-registration with email address from the local domain",
                           "type" : "string"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "email_activation_timeout" : {
                           "description" : "Delay given to a sponsor to click the activation link.",
                           "properties" : {
                              "interval" : {
                                 "description" : "Interval",
                                 "type" : "integer"
                              },
                              "unit" : {
                                 "description" : "Unit",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "sponsorship_bcc" : {
                           "description" : "Sponsors requesting access and access confirmation emails are BCC'ed to this address. Multiple destinations can be comma separated.",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "email_activation_timeout"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "basedn" : {
                           "description" : "Base DN",
                           "type" : "string"
                        },
                        "binddn" : {
                           "description" : "Leave this field empty if you want to perform an anonymous bind.",
                           "type" : "string"
                        },
                        "cache_match" : {
                           "description" : "Will cache results of matching a rule",
                           "type" : "string"
                        },
                        "connection_timeout" : {
                           "description" : "LDAP connection Timeout",
                           "type" : "integer"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "email_attribute" : {
                           "description" : "LDAP attribute name that stores the email address against which the filter will match.",
                           "type" : "string"
                        },
                        "encryption" : {
                           "description" : "Encryption",
                           "type" : "string"
                        },
                        "host" : {
                           "description" : "Host",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "monitor" : {
                           "description" : "Do you want to monitor this source?",
                           "type" : "string"
                        },
                        "password" : {
                           "description" : "Password",
                           "type" : "string"
                        },
                        "port" : {
                           "description" : "Port",
                           "type" : "integer"
                        },
                        "read_timeout" : {
                           "description" : "LDAP response timeout",
                           "type" : "integer"
                        },
                        "realms" : {
                           "description" : "Realms that will be associated with this source",
                           "items" : {
                              "description" : "Realms that will be associated with this source",
                              "type" : "string"
                           },
                           "type" : "array"
                        },
                        "scope" : {
                           "description" : "Scope",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        },
                        "usernameattribute" : {
                           "description" : "Username Attribute",
                           "type" : "string"
                        },
                        "write_timeout" : {
                           "description" : "LDAP request timeout",
                           "type" : "integer"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "encryption",
                        "basedn",
                        "scope",
                        "usernameattribute"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "access_token_param" : {
                           "description" : "Access Token Parameter",
                           "type" : "string"
                        },
                        "access_token_path" : {
                           "description" : "API Token Path",
                           "type" : "string"
                        },
                        "administration_rules" : {
                           "description" : "Administration Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authentication_rules" : {
                           "description" : "Authentication Rules",
                           "items" : {
                              "description" : "Rule - New (  )",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "type" : {
                                             "description" : "Type",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "conditions" : {
                                    "description" : "Conditions",
                                    "items" : {
                                       "description" : "Condition",
                                       "properties" : {
                                          "attribute" : {
                                             "description" : "Attribute",
                                             "type" : "string"
                                          },
                                          "operator" : {
                                             "description" : "Operator",
                                             "type" : "string"
                                          },
                                          "value" : {
                                             "description" : "Value",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "description" : {
                                    "description" : "Description",
                                    "type" : "string"
                                 },
                                 "id" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "match" : {
                                    "description" : "Matches",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "authorize_path" : {
                           "description" : "API Authorize Path",
                           "type" : "string"
                        },
                        "client_id" : {
                           "description" : "API ID",
                           "type" : "string"
                        },
                        "client_secret" : {
                           "description" : "API Secret",
                           "type" : "string"
                        },
                        "create_local_account" : {
                           "description" : "Create a local account on the PacketFence system based on the username provided.",
                           "type" : "string"
                        },
                        "description" : {
                           "description" : "Description",
                           "type" : "string"
                        },
                        "domains" : {
                           "description" : "Comma separated list of domains that will be resolve with the correct IP addresses.",
                           "type" : "string"
                        },
                        "id" : {
                           "description" : "Name",
                           "type" : "string"
                        },
                        "local_account_logins" : {
                           "description" : "The amount of times, the local account can be used after its created. 0 means infinite.",
                           "type" : "integer"
                        },
                        "protected_resource_url" : {
                           "description" : "API URL of logged user",
                           "type" : "string"
                        },
                        "redirect_url" : {
                           "description" : "The hostname must be the one of your captive portal.",
                           "type" : "string"
                        },
                        "scope" : {
                           "description" : "The permissions the application requests.",
                           "type" : "string"
                        },
                        "site" : {
                           "description" : "API URL",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "description",
                        "client_id",
                        "client_secret",
                        "site",
                        "authorize_path",
                        "access_token_path",
                        "access_token_param",
                        "scope",
                        "protected_resource_url",
                        "redirect_url",
                        "domains"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "SourcesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Source"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Switch" : {
               "properties" : {
                  "AccessListMap" : {
                     "description" : "Role by access list",
                     "type" : "string"
                  },
                  "ExternalPortalEnforcement" : {
                     "description" : "Enable external portal enforcement when supported by network equipment",
                     "type" : "string"
                  },
                  "RoleMap" : {
                     "description" : "Role by Switch Role",
                     "type" : "string"
                  },
                  "SNMPAuthPasswordRead" : {
                     "description" : "Auth Password Read",
                     "type" : "string"
                  },
                  "SNMPAuthPasswordTrap" : {
                     "description" : "Auth Password Trap",
                     "type" : "string"
                  },
                  "SNMPAuthPasswordWrite" : {
                     "description" : "Auth Password Write",
                     "type" : "string"
                  },
                  "SNMPAuthProtocolRead" : {
                     "description" : "Auth Protocol Read",
                     "type" : "string"
                  },
                  "SNMPAuthProtocolTrap" : {
                     "description" : "Auth Protocol Trap",
                     "type" : "string"
                  },
                  "SNMPAuthProtocolWrite" : {
                     "description" : "Auth Protocol Write",
                     "type" : "string"
                  },
                  "SNMPCommunityRead" : {
                     "description" : "Community Read",
                     "type" : "string"
                  },
                  "SNMPCommunityTrap" : {
                     "description" : "Community Trap",
                     "type" : "string"
                  },
                  "SNMPCommunityWrite" : {
                     "description" : "Community Write",
                     "type" : "string"
                  },
                  "SNMPEngineID" : {
                     "description" : "Engine ID",
                     "type" : "string"
                  },
                  "SNMPPrivPasswordRead" : {
                     "description" : "Priv Password Read",
                     "type" : "string"
                  },
                  "SNMPPrivPasswordTrap" : {
                     "description" : "Priv Password Trap",
                     "type" : "string"
                  },
                  "SNMPPrivPasswordWrite" : {
                     "description" : "Priv Password Write",
                     "type" : "string"
                  },
                  "SNMPPrivProtocolRead" : {
                     "description" : "Priv Protocol Read",
                     "type" : "string"
                  },
                  "SNMPPrivProtocolTrap" : {
                     "description" : "Priv Protocol Trap",
                     "type" : "string"
                  },
                  "SNMPPrivProtocolWrite" : {
                     "description" : "Priv Protocol Write",
                     "type" : "string"
                  },
                  "SNMPUserNameRead" : {
                     "description" : "User Name Read",
                     "type" : "string"
                  },
                  "SNMPUserNameTrap" : {
                     "description" : "User Name Trap",
                     "type" : "string"
                  },
                  "SNMPUserNameWrite" : {
                     "description" : "User Name Write",
                     "type" : "string"
                  },
                  "SNMPVersion" : {
                     "description" : "Version",
                     "type" : "string"
                  },
                  "SNMPVersionTrap" : {
                     "description" : "Version Trap",
                     "type" : "string"
                  },
                  "UrlMap" : {
                     "description" : "Role by Web Auth URL",
                     "type" : "string"
                  },
                  "VlanMap" : {
                     "description" : "Role by VLAN ID",
                     "type" : "string"
                  },
                  "VoIPCDPDetect" : {
                     "description" : "Detect VoIP with a SNMP request in the CDP MIB",
                     "type" : "string"
                  },
                  "VoIPDHCPDetect" : {
                     "description" : "Detect VoIP with the DHCP Fingerprint",
                     "type" : "string"
                  },
                  "VoIPEnabled" : {
                     "description" : "VoIP",
                     "type" : "string"
                  },
                  "VoIPLLDPDetect" : {
                     "description" : "Detect VoIP with a SNMP request in the LLDP MIB",
                     "type" : "string"
                  },
                  "always_trigger" : {
                     "description" : "Always trigger",
                     "type" : "string"
                  },
                  "cliAccess" : {
                     "description" : "Allow this switch to use PacketFence as a radius server for CLI access",
                     "type" : "string"
                  },
                  "cliEnablePwd" : {
                     "description" : "Enable Password",
                     "type" : "string"
                  },
                  "cliPwd" : {
                     "description" : "Password",
                     "type" : "string"
                  },
                  "cliTransport" : {
                     "description" : "Transport",
                     "type" : "string"
                  },
                  "cliUser" : {
                     "description" : "Username",
                     "type" : "string"
                  },
                  "coaPort" : {
                     "description" : "For CoA request, if we have to send to another port",
                     "type" : "integer"
                  },
                  "controllerIp" : {
                     "description" : "Use instead this IP address for de-authentication requests. Normally used for Wi-Fi only",
                     "type" : "string"
                  },
                  "deauthMethod" : {
                     "description" : "Deauthentication Method",
                     "type" : "string"
                  },
                  "description" : {
                     "description" : "Description",
                     "type" : "string"
                  },
                  "disconnectPort" : {
                     "description" : "For Disconnect request, if we have to send to another port",
                     "type" : "integer"
                  },
                  "group" : {
                     "description" : "Changing the group requires to save to see the new default values",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "IP Address/MAC Address/Range (CIDR)",
                     "type" : "string"
                  },
                  "inlineAccessList" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "inlineRole" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "inlineTrigger" : {
                     "description" : "InlineTrigger",
                     "items" : {
                        "description" : "InlineTrigger",
                        "properties" : {
                           "type" : {
                              "description" : "Type",
                              "type" : "string"
                           },
                           "value" : {
                              "description" : "Value",
                              "type" : "string"
                           }
                        },
                        "type" : "object"
                     },
                     "type" : "array"
                  },
                  "inlineUrl" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "inlineVlan" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "isolationAccessList" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "isolationRole" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "isolationUrl" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "isolationVlan" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "macDetectionAccessList" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macDetectionRole" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macDetectionUrl" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macDetectionVlan" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macSearchesMaxNb" : {
                     "description" : "Maximum number of MAC addresses retrived from a port",
                     "type" : "integer"
                  },
                  "macSearchesSleepInterval" : {
                     "description" : "Sleep interval between queries of MAC addresses",
                     "type" : "integer"
                  },
                  "mac_trigger" : {
                     "description" : "Mac trigger",
                     "type" : "string"
                  },
                  "mode" : {
                     "description" : "Mode",
                     "type" : "string"
                  },
                  "port_trigger" : {
                     "description" : "Port trigger",
                     "type" : "integer"
                  },
                  "radiusSecret" : {
                     "description" : "Secret Passphrase",
                     "type" : "string"
                  },
                  "registrationAccessList" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "registrationRole" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "registrationUrl" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "registrationVlan" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "ssid_trigger" : {
                     "description" : "Ssid trigger",
                     "type" : "string"
                  },
                  "type" : {
                     "description" : "Type",
                     "type" : "string"
                  },
                  "uplink" : {
                     "description" : "Comma-separated list of the switch uplinks",
                     "type" : "string"
                  },
                  "uplink_dynamic" : {
                     "description" : "Dynamically lookup uplinks",
                     "type" : "string"
                  },
                  "useCoA" : {
                     "description" : "Use CoA when available to deauthenticate the user. When disabled, RADIUS Disconnect will be used instead if it is available.",
                     "type" : "string"
                  },
                  "wsPwd" : {
                     "description" : "Password",
                     "type" : "string"
                  },
                  "wsTransport" : {
                     "description" : "Transport",
                     "type" : "string"
                  },
                  "wsUser" : {
                     "description" : "Username",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id"
               ],
               "type" : "object"
            },
            "SwitchGroup" : {
               "properties" : {
                  "AccessListMap" : {
                     "description" : "Role by access list",
                     "type" : "string"
                  },
                  "ExternalPortalEnforcement" : {
                     "description" : "Enable external portal enforcement when supported by network equipment",
                     "type" : "string"
                  },
                  "RoleMap" : {
                     "description" : "Role by Switch Role",
                     "type" : "string"
                  },
                  "SNMPAuthPasswordRead" : {
                     "description" : "Auth Password Read",
                     "type" : "string"
                  },
                  "SNMPAuthPasswordTrap" : {
                     "description" : "Auth Password Trap",
                     "type" : "string"
                  },
                  "SNMPAuthPasswordWrite" : {
                     "description" : "Auth Password Write",
                     "type" : "string"
                  },
                  "SNMPAuthProtocolRead" : {
                     "description" : "Auth Protocol Read",
                     "type" : "string"
                  },
                  "SNMPAuthProtocolTrap" : {
                     "description" : "Auth Protocol Trap",
                     "type" : "string"
                  },
                  "SNMPAuthProtocolWrite" : {
                     "description" : "Auth Protocol Write",
                     "type" : "string"
                  },
                  "SNMPCommunityRead" : {
                     "description" : "Community Read",
                     "type" : "string"
                  },
                  "SNMPCommunityTrap" : {
                     "description" : "Community Trap",
                     "type" : "string"
                  },
                  "SNMPCommunityWrite" : {
                     "description" : "Community Write",
                     "type" : "string"
                  },
                  "SNMPEngineID" : {
                     "description" : "Engine ID",
                     "type" : "string"
                  },
                  "SNMPPrivPasswordRead" : {
                     "description" : "Priv Password Read",
                     "type" : "string"
                  },
                  "SNMPPrivPasswordTrap" : {
                     "description" : "Priv Password Trap",
                     "type" : "string"
                  },
                  "SNMPPrivPasswordWrite" : {
                     "description" : "Priv Password Write",
                     "type" : "string"
                  },
                  "SNMPPrivProtocolRead" : {
                     "description" : "Priv Protocol Read",
                     "type" : "string"
                  },
                  "SNMPPrivProtocolTrap" : {
                     "description" : "Priv Protocol Trap",
                     "type" : "string"
                  },
                  "SNMPPrivProtocolWrite" : {
                     "description" : "Priv Protocol Write",
                     "type" : "string"
                  },
                  "SNMPUserNameRead" : {
                     "description" : "User Name Read",
                     "type" : "string"
                  },
                  "SNMPUserNameTrap" : {
                     "description" : "User Name Trap",
                     "type" : "string"
                  },
                  "SNMPUserNameWrite" : {
                     "description" : "User Name Write",
                     "type" : "string"
                  },
                  "SNMPVersion" : {
                     "description" : "Version",
                     "type" : "string"
                  },
                  "SNMPVersionTrap" : {
                     "description" : "Version Trap",
                     "type" : "string"
                  },
                  "UrlMap" : {
                     "description" : "Role by Web Auth URL",
                     "type" : "string"
                  },
                  "VlanMap" : {
                     "description" : "Role by VLAN ID",
                     "type" : "string"
                  },
                  "VoIPCDPDetect" : {
                     "description" : "Detect VoIP with a SNMP request in the CDP MIB",
                     "type" : "string"
                  },
                  "VoIPDHCPDetect" : {
                     "description" : "Detect VoIP with the DHCP Fingerprint",
                     "type" : "string"
                  },
                  "VoIPEnabled" : {
                     "description" : "VoIP",
                     "type" : "string"
                  },
                  "VoIPLLDPDetect" : {
                     "description" : "Detect VoIP with a SNMP request in the LLDP MIB",
                     "type" : "string"
                  },
                  "always_trigger" : {
                     "description" : "Always trigger",
                     "type" : "string"
                  },
                  "cliAccess" : {
                     "description" : "Allow this switch to use PacketFence as a radius server for CLI access",
                     "type" : "string"
                  },
                  "cliEnablePwd" : {
                     "description" : "Enable Password",
                     "type" : "string"
                  },
                  "cliPwd" : {
                     "description" : "Password",
                     "type" : "string"
                  },
                  "cliTransport" : {
                     "description" : "Transport",
                     "type" : "string"
                  },
                  "cliUser" : {
                     "description" : "Username",
                     "type" : "string"
                  },
                  "coaPort" : {
                     "description" : "For CoA request, if we have to send to another port",
                     "type" : "integer"
                  },
                  "controllerIp" : {
                     "description" : "Use instead this IP address for de-authentication requests. Normally used for Wi-Fi only",
                     "type" : "string"
                  },
                  "deauthMethod" : {
                     "description" : "Deauthentication Method",
                     "type" : "string"
                  },
                  "description" : {
                     "description" : "Description",
                     "type" : "string"
                  },
                  "disconnectPort" : {
                     "description" : "For Disconnect request, if we have to send to another port",
                     "type" : "integer"
                  },
                  "group" : {
                     "description" : "Group",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Group name",
                     "type" : "string"
                  },
                  "inlineAccessList" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "inlineRole" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "inlineTrigger" : {
                     "description" : "InlineTrigger",
                     "items" : {
                        "description" : "InlineTrigger",
                        "properties" : {
                           "type" : {
                              "description" : "Type",
                              "type" : "string"
                           },
                           "value" : {
                              "description" : "Value",
                              "type" : "string"
                           }
                        },
                        "type" : "object"
                     },
                     "type" : "array"
                  },
                  "inlineUrl" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "inlineVlan" : {
                     "description" : "inline",
                     "type" : "string"
                  },
                  "isolationAccessList" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "isolationRole" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "isolationUrl" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "isolationVlan" : {
                     "description" : "isolation",
                     "type" : "string"
                  },
                  "macDetectionAccessList" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macDetectionRole" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macDetectionUrl" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macDetectionVlan" : {
                     "description" : "macDetection",
                     "type" : "string"
                  },
                  "macSearchesMaxNb" : {
                     "description" : "Maximum number of MAC addresses retrived from a port",
                     "type" : "integer"
                  },
                  "macSearchesSleepInterval" : {
                     "description" : "Sleep interval between queries of MAC addresses",
                     "type" : "integer"
                  },
                  "mac_trigger" : {
                     "description" : "Mac trigger",
                     "type" : "string"
                  },
                  "mode" : {
                     "description" : "Mode",
                     "type" : "string"
                  },
                  "port_trigger" : {
                     "description" : "Port trigger",
                     "type" : "integer"
                  },
                  "radiusSecret" : {
                     "description" : "Secret Passphrase",
                     "type" : "string"
                  },
                  "registrationAccessList" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "registrationRole" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "registrationUrl" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "registrationVlan" : {
                     "description" : "registration",
                     "type" : "string"
                  },
                  "ssid_trigger" : {
                     "description" : "Ssid trigger",
                     "type" : "string"
                  },
                  "type" : {
                     "description" : "Type",
                     "type" : "string"
                  },
                  "uplink" : {
                     "description" : "Comma-separated list of the switch uplinks",
                     "type" : "string"
                  },
                  "uplink_dynamic" : {
                     "description" : "Dynamically lookup uplinks",
                     "type" : "string"
                  },
                  "useCoA" : {
                     "description" : "Use CoA when available to deauthenticate the user. When disabled, RADIUS Disconnect will be used instead if it is available.",
                     "type" : "string"
                  },
                  "wsPwd" : {
                     "description" : "Password",
                     "type" : "string"
                  },
                  "wsTransport" : {
                     "description" : "Transport",
                     "type" : "string"
                  },
                  "wsUser" : {
                     "description" : "Username",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id"
               ],
               "type" : "object"
            },
            "SwitchGroupsList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/SwitchGroup"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "SwitchesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Switch"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "SyslogParser" : {
               "discriminator" : {
                  "propertyName" : "type"
               },
               "oneOf" : [
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "loglines" : {
                           "description" : "Loglines",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "rules" : {
                           "description" : "Rules",
                           "items" : {
                              "description" : "Rule - New",
                              "properties" : {
                                 "actions" : {
                                    "description" : "Actions",
                                    "items" : {
                                       "description" : "Action",
                                       "properties" : {
                                          "api_method" : {
                                             "description" : "Api method",
                                             "type" : "string"
                                          },
                                          "api_parameters" : {
                                             "description" : "Api parameters",
                                             "type" : "string"
                                          }
                                       },
                                       "type" : "object"
                                    },
                                    "type" : "array"
                                 },
                                 "ip_mac_translation" : {
                                    "description" : "Perform automatic translation of IPs to MACs and the other way around",
                                    "type" : "string"
                                 },
                                 "last_if_match" : {
                                    "description" : "Stop processing rules if this rule matches",
                                    "type" : "string"
                                 },
                                 "name" : {
                                    "description" : "Name",
                                    "type" : "string"
                                 },
                                 "regex" : {
                                    "description" : "Regex",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  },
                  {
                     "properties" : {
                        "id" : {
                           "description" : "Detector",
                           "type" : "string"
                        },
                        "path" : {
                           "description" : "Alert pipe",
                           "type" : "string"
                        },
                        "status" : {
                           "description" : "Enabled",
                           "type" : "string"
                        },
                        "type" : {
                           "description" : "Type",
                           "type" : "string"
                        }
                     },
                     "required" : [
                        "id",
                        "path",
                        "type"
                     ],
                     "type" : "object"
                  }
               ]
            },
            "SyslogParsersList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/SyslogParser"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "TrafficShapingPoliciesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/TrafficShapingPolicy"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "TrafficShapingPolicy" : {
               "properties" : {
                  "download" : {
                     "description" : "Bandwidth must be in the following format 'nXY' where XY is one of the following KB,MB,GB,TB,PB",
                     "type" : "string"
                  },
                  "id" : {
                     "description" : "Role",
                     "type" : "string"
                  },
                  "upload" : {
                     "description" : "Bandwidth must be in the following format 'nXY' where XY is one of the following KB,MB,GB,TB,PB",
                     "type" : "string"
                  }
               },
               "required" : [
                  "id"
               ],
               "type" : "object"
            },
            "Violation" : {
               "properties" : {
                  "access_duration" : {
                     "description" : "Specify the access duration for the new registered node.",
                     "type" : "string"
                  },
                  "actions" : {
                     "description" : "Actions",
                     "items" : {
                        "description" : "Actions",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "auto_enable" : {
                     "description" : "Specifies if a host can self remediate the violation (enable network button) or if they can not and must call the help desk.",
                     "type" : "string"
                  },
                  "button_text" : {
                     "description" : "Text displayed on the violation form to hosts.",
                     "type" : "string"
                  },
                  "delay_by" : {
                     "description" : "Delay before triggering the violation.",
                     "properties" : {
                        "interval" : {
                           "description" : "Interval",
                           "type" : "integer"
                        },
                        "unit" : {
                           "description" : "Unit",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "desc" : {
                     "description" : "Description",
                     "type" : "string"
                  },
                  "enabled" : {
                     "description" : "Enabled",
                     "type" : "string"
                  },
                  "external_command" : {
                     "description" : "External Command",
                     "type" : "string"
                  },
                  "grace" : {
                     "description" : "Amount of time before the violation can reoccur. This is useful to allow hosts time (in the example 2 minutes) to download tools to fix their issue, or shutoff their peer-to-peer application.",
                     "properties" : {
                        "interval" : {
                           "description" : "Interval",
                           "type" : "integer"
                        },
                        "unit" : {
                           "description" : "Unit",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "id" : {
                     "description" : "Use a number above 1500000 if you want to be able to delete this violation later.",
                     "type" : "string"
                  },
                  "max_enable" : {
                     "description" : "Number of times a host will be able to try and self remediate before they are locked out and have to call the help desk. This is useful for users who just <i>click through</i> violation pages.",
                     "type" : "integer"
                  },
                  "priority" : {
                     "description" : "Range 1-10, with 1 the higest priority and 10 the lowest. Higher priority violations will be addressed first if a host has more than one.",
                     "type" : "string"
                  },
                  "redirect_url" : {
                     "description" : "Destination URL where PacketFence will forward the device. By default it will use the Redirection URL from the connection profile configuration.",
                     "type" : "string"
                  },
                  "target_category" : {
                     "description" : "When selecting the <strong>role</strong> action, triggering the violation will change the node to this role.",
                     "type" : "string"
                  },
                  "template" : {
                     "description" : "HTML template the host will be redirected to while in violation. You can create new templates from the <em>Connection Profiles</em> configuration section.",
                     "type" : "string"
                  },
                  "trigger" : {
                     "description" : "Trigger",
                     "type" : "string"
                  },
                  "user_mail_message" : {
                     "description" : "A message that will be added to the e-mail sent to the user regarding this violation.",
                     "type" : "string"
                  },
                  "vclose" : {
                     "description" : "When selecting the <strong>close</strong> action, triggering the violation will close this violation. This is an experimental workflow for Mobile Device Management (MDM).",
                     "type" : "string"
                  },
                  "vlan" : {
                     "description" : "Destination Role where PacketFence should put the client when a violation of this type is open.",
                     "type" : "string"
                  },
                  "whitelisted_roles" : {
                     "description" : "Nodes with the selected roles won't be affected by a violation of this type.",
                     "items" : {
                        "description" : "Nodes with the selected roles won't be affected by a violation of this type.",
                        "type" : "string"
                     },
                     "type" : "array"
                  },
                  "window" : {
                     "description" : "Amount of time before a violation will be closed automatically. Instead of allowing people to reactivate the network, you may want to open a violation for a defined amount of time instead.",
                     "properties" : {
                        "interval" : {
                           "description" : "Interval",
                           "type" : "integer"
                        },
                        "unit" : {
                           "description" : "Unit",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "window_dynamic" : {
                     "description" : "Only works for accounting violations.  The violation will be opened according to the time you set in the accounting violation (ie. You have an accounting violation for 10GB/month.  If you bust the bandwidth after 3 days, the violation will open and the release date will be set for the last day of the current month).",
                     "type" : "string"
                  }
               },
               "required" : [],
               "type" : "object"
            },
            "ViolationsList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/config/Violation"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            }
         },
         "users" : {
            "Node" : {
               "properties" : {
                  "autoreg" : {
                     "type" : "string"
                  },
                  "bandwidth_balance" : {
                     "type" : "integer"
                  },
                  "bypass_role_id" : {
                     "type" : "integer"
                  },
                  "bypass_vlan" : {
                     "type" : "string"
                  },
                  "category_id" : {
                     "type" : "integer"
                  },
                  "computername" : {
                     "type" : "string"
                  },
                  "detect_date" : {
                     "type" : "string"
                  },
                  "device_class" : {
                     "type" : "string"
                  },
                  "device_score" : {
                     "type" : "string"
                  },
                  "device_type" : {
                     "type" : "string"
                  },
                  "device_version" : {
                     "type" : "string"
                  },
                  "dhcp6_enterprise" : {
                     "type" : "string"
                  },
                  "dhcp6_fingerprint" : {
                     "type" : "string"
                  },
                  "dhcp_fingerprint" : {
                     "type" : "string"
                  },
                  "dhcp_vendor" : {
                     "type" : "string"
                  },
                  "last_arp" : {
                     "type" : "string"
                  },
                  "last_dhcp" : {
                     "type" : "string"
                  },
                  "last_seen" : {
                     "type" : "string"
                  },
                  "lastskip" : {
                     "type" : "string"
                  },
                  "mac" : {
                     "type" : "string"
                  },
                  "machine_account" : {
                     "type" : "string"
                  },
                  "notes" : {
                     "type" : "string"
                  },
                  "pid" : {
                     "type" : "string"
                  },
                  "regdate" : {
                     "type" : "string"
                  },
                  "sessionid" : {
                     "type" : "string"
                  },
                  "status" : {
                     "type" : "string"
                  },
                  "tenant_id" : {
                     "type" : "integer"
                  },
                  "time_balance" : {
                     "type" : "integer"
                  },
                  "unregdate" : {
                     "type" : "string"
                  },
                  "user_agent" : {
                     "type" : "string"
                  },
                  "voip" : {
                     "type" : "string"
                  }
               },
               "required" : [],
               "type" : "object"
            },
            "NodesList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/users/Node"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "Password" : {
               "properties" : {
                  "access_duration" : {
                     "type" : "string"
                  },
                  "access_level" : {
                     "type" : "string"
                  },
                  "category" : {
                     "type" : "integer"
                  },
                  "expiration" : {
                     "type" : "string"
                  },
                  "login_remaining" : {
                     "type" : "integer"
                  },
                  "password" : {
                     "type" : "string"
                  },
                  "pid" : {
                     "type" : "string"
                  },
                  "sponsor" : {
                     "type" : "integer"
                  },
                  "tenant_id" : {
                     "type" : "integer"
                  },
                  "unregdate" : {
                     "type" : "string"
                  },
                  "valid_from" : {
                     "type" : "string"
                  }
               },
               "required" : [],
               "type" : "object"
            },
            "PasswordList" : {
               "allOf" : [
                  {
                     "$ref" : "#/components/schemas/Iterable"
                  },
                  {
                     "properties" : {
                        "items" : {
                           "items" : {
                              "$ref" : "#/components/schemas/users/Password"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               ]
            },
            "nodes" : {
               "Locationlog" : {
                  "properties" : {
                     "connection_sub_type" : {
                        "type" : "string"
                     },
                     "connection_type" : {
                        "type" : "string"
                     },
                     "dot1x_username" : {
                        "type" : "string"
                     },
                     "end_time" : {
                        "type" : "string"
                     },
                     "id" : {
                        "type" : "integer"
                     },
                     "ifDesc" : {
                        "type" : "string"
                     },
                     "mac" : {
                        "type" : "string"
                     },
                     "port" : {
                        "type" : "string"
                     },
                     "realm" : {
                        "type" : "string"
                     },
                     "role" : {
                        "type" : "string"
                     },
                     "session_id" : {
                        "type" : "string"
                     },
                     "ssid" : {
                        "type" : "string"
                     },
                     "start_time" : {
                        "type" : "string"
                     },
                     "stripped_user_name" : {
                        "type" : "string"
                     },
                     "switch" : {
                        "type" : "string"
                     },
                     "switch_ip" : {
                        "type" : "string"
                     },
                     "switch_mac" : {
                        "type" : "string"
                     },
                     "tenant_id" : {
                        "type" : "integer"
                     },
                     "vlan" : {
                        "type" : "string"
                     }
                  },
                  "required" : [],
                  "type" : "object"
               },
               "LocationlogsList" : {
                  "allOf" : [
                     {
                        "$ref" : "#/components/schemas/Iterable"
                     },
                     {
                        "properties" : {
                           "items" : {
                              "items" : {
                                 "$ref" : "#/components/schemas/users/nodes/Locationlog"
                              },
                              "type" : "array"
                           }
                        },
                        "type" : "object"
                     }
                  ]
               }
            }
         }
      },
      "securitySchemes" : {
         "bearerAuth" : {
            "bearerFormat" : "JWT",
            "scheme" : "bearer",
            "type" : "http"
         }
      }
   },
   "info" : {
      "description" : "A JSON HTTP API to access and manipulate the PacketFence resources. Backward compatibility is currently not 100% guaranteed although we will do our best effort to keep API calls as described here.",
      "title" : "PacketFence API",
      "version" : "1.0.0"
   },
   "openapi" : "3.0.0",
   "paths" : {
      "/api_user/{api_user_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.ApiUsers.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::ApiUser",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.ApiUsers.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/ApiUser"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.ApiUsers.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ApiUser"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.ApiUsers.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ApiUser"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/api_users" : {
         "description" : "pf::UnifiedApi::Controller::ApiUser",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.ApiUsers.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ApiUsersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.ApiUsers.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ApiUser"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/api_users/search" : {
         "description" : "pf::UnifiedApi::Controller::ApiUser",
         "post" : {
            "operationId" : "api.v1.ApiUsers.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ApiUsersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/admin_role/{admin_role_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::AdminRoles.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::AdminRoles",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::AdminRoles.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/AdminRole"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::AdminRoles.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/AdminRole"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::AdminRoles.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/AdminRole"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/admin_roles" : {
         "description" : "pf::UnifiedApi::Controller::Config::AdminRoles",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::AdminRoles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/AdminRolesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/base/{base_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Bases.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Bases",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Bases.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Base"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Bases.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Base"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Bases.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Base"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/bases" : {
         "description" : "pf::UnifiedApi::Controller::Config::Bases",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Bases.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/BasesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/billing_tier/{billing_tier_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::BillingTiers.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::BillingTiers",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::BillingTiers.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/BillingTier"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::BillingTiers.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/BillingTier"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::BillingTiers.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/BillingTier"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/billing_tiers" : {
         "description" : "pf::UnifiedApi::Controller::Config::BillingTiers",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::BillingTiers.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/BillingTiersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/connection_profile/{connection_profile_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::ConnectionProfiles.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::ConnectionProfiles",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::ConnectionProfiles.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/ConnectionProfile"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::ConnectionProfiles.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/ConnectionProfile"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::ConnectionProfiles.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/ConnectionProfile"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/connection_profiles" : {
         "description" : "pf::UnifiedApi::Controller::Config::ConnectionProfiles",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::ConnectionProfiles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/ConnectionProfilesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/device_registration/{device_registration_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::DeviceRegistrations.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::DeviceRegistrations",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::DeviceRegistrations.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/DeviceRegistration"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::DeviceRegistrations.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/DeviceRegistration"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::DeviceRegistrations.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/DeviceRegistration"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/device_registrations" : {
         "description" : "pf::UnifiedApi::Controller::Config::DeviceRegistrations",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::DeviceRegistrations.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/DeviceRegistrationsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/domain/{domain_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Domains.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Domains",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Domains.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Domain"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Domains.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Domain"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Domains.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Domain"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/domains" : {
         "description" : "pf::UnifiedApi::Controller::Config::Domains",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Domains.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/DomainsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/firewall/{firewall_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Firewalls.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Firewalls",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Firewalls.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Firewall"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Firewalls.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Firewall"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Firewalls.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Firewall"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/firewalls" : {
         "description" : "pf::UnifiedApi::Controller::Config::Firewalls",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Firewalls.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/FirewallsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/floating_device/{floating_device_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::FloatingDevices.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::FloatingDevices.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/FloatingDevice"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::FloatingDevices.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/FloatingDevice"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::FloatingDevices.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/FloatingDevice"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/floating_devices" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::FloatingDevices.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/FloatingDevicesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/maintenance_task/{maintenance_task_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::MaintenanceTasks.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::MaintenanceTasks",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::MaintenanceTasks.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/MaintenanceTask"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::MaintenanceTasks.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/MaintenanceTask"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::MaintenanceTasks.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/MaintenanceTask"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/maintenance_tasks" : {
         "description" : "pf::UnifiedApi::Controller::Config::MaintenanceTasks",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::MaintenanceTasks.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/MaintenanceTasksList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/pki_provider/{pki_provider_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::PkiProviders.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::PkiProviders",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::PkiProviders.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/PkiProvider"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::PkiProviders.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/PkiProvider"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::PkiProviders.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/PkiProvider"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/pki_providers" : {
         "description" : "pf::UnifiedApi::Controller::Config::PkiProviders",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::PkiProviders.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/PkiProvidersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/portal_module/{portal_module_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::PortalModules.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::PortalModules",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::PortalModules.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/PortalModule"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::PortalModules.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/PortalModule"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::PortalModules.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/PortalModule"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/portal_modules" : {
         "description" : "pf::UnifiedApi::Controller::Config::PortalModules",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::PortalModules.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/PortalModulesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/realm/{realm_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Realms.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Realms",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Realms.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Realm"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Realms.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Realm"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Realms.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Realm"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/realms" : {
         "description" : "pf::UnifiedApi::Controller::Config::Realms",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Realms.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/RealmsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/role/{role_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Roles.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Roles",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Roles.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Role"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Roles.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Role"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Roles.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Role"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/roles" : {
         "description" : "pf::UnifiedApi::Controller::Config::Roles",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Roles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/RolesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/scan/{scan_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Scans.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Scans",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Scans.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Scan"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Scans.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Scan"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Scans.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Scan"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/scans" : {
         "description" : "pf::UnifiedApi::Controller::Config::Scans",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Scans.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/ScansList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/source/{source_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Sources.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Sources",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Sources.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Source"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Sources.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Source"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Sources.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Source"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/sources" : {
         "description" : "pf::UnifiedApi::Controller::Config::Sources",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Sources.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/SourcesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switch/{switch_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Switches.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Switches",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Switches.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Switch"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Switches.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Switch"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Switches.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Switch"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switch_group/{switch_group_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::SwitchGroups.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SwitchGroups",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::SwitchGroups.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/SwitchGroup"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::SwitchGroups.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/SwitchGroup"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::SwitchGroups.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/SwitchGroup"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switch_groups" : {
         "description" : "pf::UnifiedApi::Controller::Config::SwitchGroups",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::SwitchGroups.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/SwitchGroupsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switches" : {
         "description" : "pf::UnifiedApi::Controller::Config::Switches",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Switches.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/SwitchesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/syslog_parser/{syslog_parser_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::SyslogParsers.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SyslogParsers",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::SyslogParsers.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/SyslogParser"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::SyslogParsers.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/SyslogParser"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::SyslogParsers.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/SyslogParser"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/syslog_parsers" : {
         "description" : "pf::UnifiedApi::Controller::Config::SyslogParsers",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::SyslogParsers.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/SyslogParsersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/traffic_shaping_policies" : {
         "description" : "pf::UnifiedApi::Controller::Config::TrafficShapingPolicies",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::TrafficShapingPolicies.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/TrafficShapingPoliciesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/traffic_shaping_policy/{traffic_shaping_policy_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::TrafficShapingPolicies.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::TrafficShapingPolicies",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::TrafficShapingPolicies.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/TrafficShapingPolicy"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::TrafficShapingPolicies.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/TrafficShapingPolicy"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::TrafficShapingPolicies.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/TrafficShapingPolicy"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/violation/{violation_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config::Violations.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Violations",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config::Violations.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/Violation"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config::Violations.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Violation"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config::Violations.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/config/Violation"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/violations" : {
         "description" : "pf::UnifiedApi::Controller::Config::Violations",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config::Violations.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/config/ViolationsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dhcp/initialease/{interface}" : {
         "get" : {
            "description" : "Initializes dhcp for a specific interface and returns statistics",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpInterfaceInit"
               }
            },
            "summary" : "Initialize an interface"
         }
      },
      "/dhcp/ip/{ip}" : {
         "get" : {
            "description" : "Performs a dhcp lookup and returns the MAC address for the given IP address lease",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpMacIp"
               }
            },
            "summary" : "Get a MAC address by IPv4 address"
         }
      },
      "/dhcp/mac/{mac}" : {
         "delete" : {
            "description" : "Expires the dhcp lease for a specific MAC address",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpMacResponse"
               }
            },
            "summary" : "Expire a dhcp lease"
         },
         "get" : {
            "description" : "Performs a dhcp lookup and returns the IP address leased for the given MAC address",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpMacIp"
               }
            },
            "summary" : "Get an IPv4 address by MAC address"
         }
      },
      "/dhcp/options/mac/{mac}" : {
         "delete" : {
            "description" : "Removes dhcp options for a MAC address",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpMacResponse"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "Delete options by MAC address"
         },
         "post" : {
            "description" : "Add dhcp options to a MAC address",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpMacResponse"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "Add options by MAC address"
         }
      },
      "/dhcp/options/network/{network}" : {
         "delete" : {
            "description" : "Removes dhcp options for a Network",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpNetworkResponse"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "Delete options by network"
         },
         "post" : {
            "description" : "Add dhcp options for a Network",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpNetworkResponse"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "Add options by network"
         }
      },
      "/dhcp/stats/{interface}" : {
         "get" : {
            "description" : "Shows detailed dhcp statistics for the given interface",
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/DhcpInterfaceStats"
               }
            },
            "summary" : "Get interface statistics"
         }
      },
      "/dhcp_option82/{dhcp_option82_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.DhcpOption82s.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::DhcpOption82s",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.DhcpOption82s.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/DhcpOption82"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.DhcpOption82s.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DhcpOption82"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.DhcpOption82s.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DhcpOption82"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dhcp_option82s" : {
         "description" : "pf::UnifiedApi::Controller::DhcpOption82s",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.DhcpOption82s.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DhcpOption82sList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.DhcpOption82s.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DhcpOption82"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dhcp_option82s/search" : {
         "description" : "pf::UnifiedApi::Controller::DhcpOption82s",
         "post" : {
            "operationId" : "api.v1.DhcpOption82s.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DhcpOption82sList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip4log/{ip4log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Ip4logs.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Ip4logs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Ip4logs.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Ip4log"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Ip4logs.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip4log"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Ip4logs.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip4log"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip4logs" : {
         "description" : "pf::UnifiedApi::Controller::Ip4logs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Ip4logs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Ip4logsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Ip4logs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip4log"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip4logs/search" : {
         "description" : "pf::UnifiedApi::Controller::Ip4logs",
         "post" : {
            "operationId" : "api.v1.Ip4logs.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Ip4logsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ipset/add_ip/{set_name}" : {
         "post" : {
            "description" : "Add an IP to a specific ipset",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               },
               {
                  "$ref" : "#/components/parameters/ipset_name"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetIp"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "Add an IP to a specific ipset"
         }
      },
      "/ipset/mark_ip_layer2" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetIp"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/mark_ip_layer3" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetIp"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/mark_layer2" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetMac"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetMac"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/mark_layer3" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetIp"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/passthrough" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetPort"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/passthrough_isolation" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetPort"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/remove_ip/{set_name}" : {
         "post" : {
            "description" : "Removes an IP from a specific ipset",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               },
               {
                  "$ref" : "#/components/parameters/ipset_name"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetIp"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "Removes an IP from a specific ipset"
         }
      },
      "/ipset/umark_ip" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetIp"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetIp"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/ipset/unmark_mac" : {
         "post" : {
            "description" : "...",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/local"
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/IpsetMac"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/IpsetMac"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               }
            },
            "summary" : "..."
         }
      },
      "/locationlog/{locationlog_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Locationlogs.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Locationlogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Locationlogs.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Locationlog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Locationlogs.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Locationlog"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Locationlogs.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Locationlog"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/locationlogs" : {
         "description" : "pf::UnifiedApi::Controller::Locationlogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Locationlogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/LocationlogsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Locationlogs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Locationlog"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/locationlogs/search" : {
         "description" : "pf::UnifiedApi::Controller::Locationlogs",
         "post" : {
            "operationId" : "api.v1.Locationlogs.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/LocationlogsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/login" : {
         "post" : {
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "properties" : {
                           "password" : {
                              "type" : "string"
                           },
                           "username" : {
                              "type" : "string"
                           }
                        },
                        "type" : "object"
                     }
                  }
               },
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "token" : {
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Login successful"
               },
               "401" : {
                  "$ref" : "#/components/responses/Unauthorized"
               },
               "403" : {
                  "$ref" : "#/components/responses/Forbidden"
               }
            },
            "security" : [
               {
                  "none" : []
               }
            ],
            "summary" : "Login into the API and obtain a token"
         }
      },
      "/node/{node_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Nodes.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Nodes",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Nodes.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Node"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Nodes.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Node"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Nodes.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Node"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/nodes" : {
         "description" : "pf::UnifiedApi::Controller::Nodes",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Nodes.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/NodesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Nodes.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Node"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/nodes/search" : {
         "description" : "pf::UnifiedApi::Controller::Nodes",
         "post" : {
            "operationId" : "api.v1.Nodes.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/NodesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/radius_audit_log/{radius_audit_log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.RadiusAuditLogs.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::RadiusAuditLogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.RadiusAuditLogs.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/RadiusAuditLog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.RadiusAuditLogs.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/RadiusAuditLog"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.RadiusAuditLogs.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/RadiusAuditLog"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/radius_audit_logs" : {
         "description" : "pf::UnifiedApi::Controller::RadiusAuditLogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.RadiusAuditLogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/RadiusAuditLogsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.RadiusAuditLogs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/RadiusAuditLog"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/radius_audit_logs/search" : {
         "description" : "pf::UnifiedApi::Controller::RadiusAuditLogs",
         "post" : {
            "operationId" : "api.v1.RadiusAuditLogs.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/RadiusAuditLogsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/service/{service}/disable" : {
         "post" : {
            "parameters" : [
               {
                  "description" : "The service name to fetch",
                  "in" : "path",
                  "name" : "service",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "required" : false
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/schemas/ServiceDisable"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Disables a service so it doesn't start automatically after reboot"
         }
      },
      "/service/{service}/enable" : {
         "post" : {
            "parameters" : [
               {
                  "description" : "The service name to fetch",
                  "in" : "path",
                  "name" : "service",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "required" : false
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/schemas/ServiceEnable"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Enables a service so it starts automatically after reboot"
         }
      },
      "/service/{service}/restart" : {
         "post" : {
            "parameters" : [
               {
                  "description" : "The service name to fetch",
                  "in" : "path",
                  "name" : "service",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "required" : false
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/schemas/ServiceRestart"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Restarts a service and returns the PID"
         }
      },
      "/service/{service}/start" : {
         "post" : {
            "parameters" : [
               {
                  "description" : "The service name to fetch",
                  "in" : "path",
                  "name" : "service",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "required" : false
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/schemas/ServiceStart"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Starts a service and return the PID"
         }
      },
      "/service/{service}/status" : {
         "get" : {
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Service"
                        }
                     }
                  },
                  "description" : "Service details"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Returns a service status"
         }
      },
      "/service/{service}/stop" : {
         "post" : {
            "parameters" : [
               {
                  "description" : "The service name to fetch",
                  "in" : "path",
                  "name" : "service",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "required" : false
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/schemas/ServiceStop"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Stops a service"
         }
      },
      "/services/" : {
         "get" : {
            "description" : "The list of services will be limited to 100 and a cursor will be returned for iterating on other services. Iteration is only needed if the nextCursor is not an empty value.",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ServicesList"
                        }
                     }
                  },
                  "description" : "List of services"
               }
            },
            "summary" : "Returns a list of available services"
         }
      },
      "/services/cluster_status" : {
         "get" : {
            "description" : "Returns a list of the status of the services on each cluster member",
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "$SERVER_HOSTNAME" : {
                                 "properties" : {
                                    "$SERVICE_NAME" : {
                                       "$ref" : "#/components/schemas/Service"
                                    }
                                 },
                                 "type" : "object"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "List of services"
               }
            },
            "summary" : "Returns a list of the status of the services on each cluster member"
         }
      },
      "/tenant/{tenant_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Tenants.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Tenants",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Tenants.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Tenant"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Tenants.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Tenant"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Tenants.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Tenant"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/tenants" : {
         "description" : "pf::UnifiedApi::Controller::Tenants",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Tenants.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/TenantsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Tenants.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Tenant"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/tenants/search" : {
         "description" : "pf::UnifiedApi::Controller::Tenants",
         "post" : {
            "operationId" : "api.v1.Tenants.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/TenantsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/token_info" : {
         "post" : {
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "admin_roles" : {
                                 "description" : "The list of all the admin roles associated to this token",
                                 "items" : {
                                    "type" : "string"
                                 },
                                 "type" : "array"
                              },
                              "tenant_id" : {
                                 "description" : "The tenant ID associated to this token. When set to 0, it will provide access to all the tenants. When set to -1, the token is prohibited from accessing data from any tenant.",
                                 "type" : "string"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Successfully found information for the token"
               },
               "404" : {
                  "$ref" : "#/components/responses/NotFound"
               }
            },
            "summary" : "Get information on the current token"
         }
      },
      "/user/{user_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::User",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/User"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/node/{node_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.Nodes.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.Nodes.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/users/Node"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.Nodes.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/Node"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.Nodes.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/Node"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/node/{node_id}/locationlog/{locationlog_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.Nodes.Locationlogs.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Nodes::Locationlogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.Nodes.Locationlogs.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/users/nodes/Locationlog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.Nodes.Locationlogs.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/nodes/Locationlog"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.Nodes.Locationlogs.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/nodes/Locationlog"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/node/{node_id}/locationlogs" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes::Locationlogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Users.Nodes.Locationlogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/users/nodes/LocationlogsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.Nodes.Locationlogs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/nodes/Locationlog"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/node/{node_id}/locationlogs/search" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes::Locationlogs",
         "post" : {
            "operationId" : "api.v1.Users.Nodes.Locationlogs.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/users/nodes/LocationlogsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/nodes" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Users.Nodes.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/users/NodesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.Nodes.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/Node"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/nodes/search" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "post" : {
            "operationId" : "api.v1.Users.Nodes.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/users/NodesList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/password" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.Password.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Password",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.Password.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/users/Password"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.Password.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/Password"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.Password.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/Password"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.Password.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/users/Password"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/password/search" : {
         "description" : "pf::UnifiedApi::Controller::Users::Password",
         "post" : {
            "operationId" : "api.v1.Users.Password.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/users/PasswordList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/users" : {
         "description" : "pf::UnifiedApi::Controller::User",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Users.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/users/search" : {
         "description" : "pf::UnifiedApi::Controller::User",
         "post" : {
            "operationId" : "api.v1.Users.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/violation/{violation_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Violations.remove",
            "parameters" : [],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Violations",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Violations.get",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Violation"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Violations.update",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Violation"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Violations.replace",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Violation"
                     }
                  }
               },
               "required" : "1"
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/violations" : {
         "description" : "pf::UnifiedApi::Controller::Violations",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Violations.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ViolationsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Violations.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Violation"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/violations/search" : {
         "description" : "pf::UnifiedApi::Controller::Violations",
         "post" : {
            "operationId" : "api.v1.Violations.search",
            "parameters" : [],
            "requestBody" : {
               "application/json" : {
                  "$ref" : "#/components/schemas/Search"
               }
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ViolationsList"
                        }
                     }
                  }
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      }
   },
   "security" : [
      {
         "bearerAuth" : []
      }
   ],
   "servers" : [
      {
         "url" : "https://127.0.0.1:9999/api/v1"
      }
   ]
}
